[
  {
    "main": {},
    "_source_file": "GitAiData.json"
  },
  {
    "type": "module",
    "name": "",
    "start_line": 1,
    "end_line": 3,
    "code": "from nicegui import ui\nfrom controller import DownloadState, run_download\nimport os",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/app.py",
    "_source_file": "app.json"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 5,
    "end_line": 5,
    "code": "state = DownloadState()",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/app.py",
    "_source_file": "app.json"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 7,
    "end_line": 10,
    "code": "ui.label(\"🎵 YouTube to MP3 Downloader\").classes('text-2xl font-bold text-center mt-4')\ninput_url = ui.input(\"YouTube URL\").classes('w-full')\nstatus_label = ui.label()\nprogress = ui.linear_progress().classes('w-full')",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/app.py",
    "_source_file": "app.json"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 16,
    "end_line": 16,
    "code": "ui.timer(interval=0.3, callback=update_ui)",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/app.py",
    "_source_file": "app.json"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 35,
    "end_line": 35,
    "code": "ui.button(\"Download MP3 🎶\", color='primary', on_click=start_download)",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/app.py",
    "_source_file": "app.json"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 37,
    "end_line": 37,
    "code": "ui.run(title=\"YouTube MP3 추출기\", reload=False)",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/app.py",
    "_source_file": "app.json"
  },
  {
    "type": "function",
    "name": "update_ui",
    "start_line": 12,
    "end_line": 14,
    "code": "def update_ui():\n    progress.set_value(state.percent)\n    status_label.set_text(state.status)",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/app.py",
    "_source_file": "app.json"
  },
  {
    "type": "async_function",
    "name": "start_download",
    "start_line": 18,
    "end_line": 32,
    "code": "async def start_download():\n    url = input_url.value.strip()\n    if not url:\n        state.status = \"❗ URL을 입력해주세요.\"\n        return\n\n    state.percent = 0.0\n    state.status = \"⏳ 다운로드 준비 중...\"\n\n    await run_download(url, state)\n\n    if state.result_path and os.path.exists(state.result_path):\n        ui.download(state.result_path, filename=state.filename)\n    else:\n        state.status = \"❌ 다운로드된 파일을 찾을 수 없습니다.\"",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/app.py",
    "_source_file": "app.json"
  },
  {
    "type": "module",
    "name": "",
    "start_line": 1,
    "end_line": 3,
    "code": "import asyncio\nfrom downloader import download_mp3_with_progress\nimport os",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/controller.py",
    "_source_file": "controller.json"
  },
  {
    "type": "function",
    "name": "__init__",
    "start_line": 6,
    "end_line": 10,
    "code": "    def __init__(self):\n        self.percent = 0.0\n        self.status = \"대기 중\"\n        self.filename = None\n        self.result_path = None",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/controller.py",
    "_source_file": "controller.json"
  },
  {
    "type": "function",
    "name": "hook",
    "start_line": 12,
    "end_line": 20,
    "code": "    def hook(self, p):\n        if p['status'] == 'downloading':\n            total = float(p.get('total_bytes', 1))\n            downloaded = float(p.get('downloaded_bytes', 0))\n            self.percent = downloaded / total\n            self.status = f\"📥 {self.percent * 100:.1f}% 다운로드 중\"\n        elif p['status'] == 'finished':\n            self.percent = 1.0\n            self.status = \"🎧 변환 중...\"",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/controller.py",
    "_source_file": "controller.json"
  },
  {
    "type": "async_function",
    "name": "run_download",
    "start_line": 22,
    "end_line": 31,
    "code": "async def run_download(url: str, state: DownloadState):\n    state.status = \"⏳ 다운로드 시작...\"\n    filename, path = await asyncio.to_thread(download_mp3_with_progress, url, state.hook)\n\n    if filename and os.path.exists(path):\n        state.filename = filename\n        state.result_path = path\n        state.status = f\"✅ 완료: {filename}\"\n    else:\n        state.status = \"❌ 오류 발생 또는 파일 없음\"",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/controller.py",
    "_source_file": "controller.json"
  },
  {
    "type": "class",
    "name": "DownloadState",
    "start_line": 5,
    "end_line": 20,
    "code": "class DownloadState:\n    def __init__(self):\n        self.percent = 0.0\n        self.status = \"대기 중\"\n        self.filename = None\n        self.result_path = None\n\n    def hook(self, p):\n        if p['status'] == 'downloading':\n            total = float(p.get('total_bytes', 1))\n            downloaded = float(p.get('downloaded_bytes', 0))\n            self.percent = downloaded / total\n            self.status = f\"📥 {self.percent * 100:.1f}% 다운로드 중\"\n        elif p['status'] == 'finished':\n            self.percent = 1.0\n            self.status = \"🎧 변환 중...\"",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/controller.py",
    "_source_file": "controller.json"
  },
  {
    "type": "module",
    "name": "",
    "start_line": 1,
    "end_line": 2,
    "code": "import os\nimport yt_dlp",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/downloader.py",
    "_source_file": "downloader.json"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 4,
    "end_line": 4,
    "code": "OUTPUT_DIR = 'output_audio'",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/downloader.py",
    "_source_file": "downloader.json"
  },
  {
    "type": "function",
    "name": "download_mp3_with_progress",
    "start_line": 6,
    "end_line": 32,
    "code": "def download_mp3_with_progress(url: str, hook_fn=None):\n    if not os.path.exists(OUTPUT_DIR):\n        os.makedirs(OUTPUT_DIR)\n\n    ydl_opts = {\n        'format': 'bestaudio/best',\n        'outtmpl': os.path.join(OUTPUT_DIR, '%(title)s.%(ext)s'),\n        'postprocessors': [{\n            'key': 'FFmpegExtractAudio',\n            'preferredcodec': 'mp3',\n            'preferredquality': '192',\n        }],\n        'noplaylist': True,\n        'quiet': True,\n        'progress_hooks': [hook_fn] if hook_fn else [],\n        'outtmpl_na_placeholder': '_',  # 특수문자 대체\n    }\n\n    try:\n        with yt_dlp.YoutubeDL(ydl_opts) as ydl:\n            result = ydl.extract_info(url, download=True)\n            filename_with_ext = ydl.prepare_filename(result)\n            filename = os.path.splitext(os.path.basename(filename_with_ext))[0] + \".mp3\"\n            full_path = os.path.join(OUTPUT_DIR, filename)\n            return filename, full_path\n    except Exception as e:\n        return None, str(e)",
    "file_path": "/home/gyuho/RAGAgent/Demo_version(old)/git-agent/repository/youtube_mp3_downloader/downloader.py",
    "_source_file": "downloader.json"
  }
]