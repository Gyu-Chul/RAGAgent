[
  {
    "type": "module",
    "name": "",
    "start_line": 1,
    "end_line": 4,
    "code": "import os\nfrom flask import Blueprint, flash, redirect, request, render_template, current_app, url_for\nfrom utils.auth_utils import validate_session\nfrom utils.imageFile_utils import allowed_file",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\awstest\\uploadPage.py"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 7,
    "end_line": 8,
    "code": "uploadPage_bp = Blueprint(\"upload\", __name__)\nUPLOAD_FOLDER = 'images'  # 서버에 이미지가 저장될 폴더",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\awstest\\uploadPage.py"
  },
  {
    "type": "function",
    "name": "load_session",
    "start_line": 11,
    "end_line": 28,
    "code": "def load_session():\n    print(\"load_session 실행\")\n    # 클라이언트 쿠키에서 세션 ID를 가져와 g 객체에 저장\n    session_id = request.cookies.get(\"session_id\")\n    # get_active_sessions()\n    session_valid, response = validate_session(session_id)\n\n    if response:\n        flash(\"세션이 만료되었습니다.\", \"danger\")\n        return response\n\n    if session_valid:\n        flash(\"로그아웃 완료!\", \"success\")\n        # return redirect(url_for(\"login.login\"))\n        return\n\n    flash(\"이미 로그아웃 상태입니다.\", \"info\")\n    return redirect(url_for(\"login.login\"))",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\awstest\\uploadPage.py"
  },
  {
    "type": "function",
    "name": "upload_image",
    "start_line": 32,
    "end_line": 67,
    "code": "def upload_image():\n    if request.method == 'POST':\n        # 파일이 요청에 포함되어 있는지 확인\n        if 'image' not in request.files:\n            flash('이미지 파일이 선택되지 않았습니다.', 'danger')\n            return redirect(request.url)\n\n        file = request.files['image']\n\n        # 파일명이 없는 경우 처리\n        if file.filename == '':\n            flash('파일명이 없습니다. 파일을 다시 선택하세요.', 'danger')\n            return redirect(request.url)\n\n        # 파일 유효성 검사\n        if file and allowed_file(file.filename):\n            # Flask 설정에서 업로드 폴더 경로 가져오기\n            upload_folder = current_app.config['UPLOAD_FOLDER']\n\n            # 폴더가 없다면 생성\n            os.makedirs(upload_folder, exist_ok=True)\n\n            # 파일 저장\n            filepath = os.path.join(upload_folder, file.filename)\n            file.save(filepath)\n            flash(f'이미지가 성공적으로 업로드되었습니다: {file.filename}', 'success')\n\n            result = [\"SMC\",\"100.00%\"] # ==> [ 화가 이름 / 퍼센트 ]\n\n            return redirect(request.url)\n        else:\n            flash('JPG 형식의 파일만 업로드 가능합니다.', 'danger')\n            return redirect(request.url)\n\n    # GET 요청일 경우 업로드 페이지 렌더링\n    return render_template('upload.html')",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\awstest\\uploadPage.py"
  }
]