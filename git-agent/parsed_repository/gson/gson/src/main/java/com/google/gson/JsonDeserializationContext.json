[
  {
    "type": "package",
    "name": "com.google.gson",
    "start_line": 17,
    "end_line": 17,
    "code": "package com.google.gson;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\JsonDeserializationContext.java"
  },
  {
    "type": "import",
    "name": "java.lang.reflect.Type",
    "start_line": 19,
    "end_line": 19,
    "code": "import java.lang.reflect.Type;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\JsonDeserializationContext.java"
  },
  {
    "type": "interface",
    "name": "JsonDeserializationContext",
    "start_line": 28,
    "end_line": 44,
    "code": "/**\r\n * Context for deserialization that is passed to a custom deserializer during invocation of its\r\n * {@link JsonDeserializer#deserialize(JsonElement, Type, JsonDeserializationContext)} method.\r\n *\r\n * @author Inderjeet Singh\r\n * @author Joel Leitch\r\n */\r\npublic interface JsonDeserializationContext {\r\n\r\n    /**\r\n     * Invokes default deserialization on the specified object. It should never be invoked on the\r\n     * element received as a parameter of the {@link JsonDeserializer#deserialize(JsonElement, Type,\r\n     * JsonDeserializationContext)} method. Doing so will result in an infinite loop since Gson will\r\n     * in-turn call the custom deserializer again.\r\n     *\r\n     * @param json the parse tree.\r\n     * @param typeOfT type of the expected return value.\r\n     * @param <T> The type of the deserialized object.\r\n     * @return An object of type typeOfT.\r\n     * @throws JsonParseException if the parse tree does not contain expected data.\r\n     */\r\n    @SuppressWarnings(\"TypeParameterUnusedInFormals\")\r\n    public <T> T deserialize(JsonElement json, Type typeOfT) throws JsonParseException;\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\JsonDeserializationContext.java"
  },
  {
    "type": "method",
    "name": "deserialize",
    "start_line": 42,
    "end_line": 43,
    "code": "/**\r\n * Invokes default deserialization on the specified object. It should never be invoked on the\r\n * element received as a parameter of the {@link JsonDeserializer#deserialize(JsonElement, Type,\r\n * JsonDeserializationContext)} method. Doing so will result in an infinite loop since Gson will\r\n * in-turn call the custom deserializer again.\r\n *\r\n * @param json the parse tree.\r\n * @param typeOfT type of the expected return value.\r\n * @param <T> The type of the deserialized object.\r\n * @return An object of type typeOfT.\r\n * @throws JsonParseException if the parse tree does not contain expected data.\r\n */\r\n@SuppressWarnings(\"TypeParameterUnusedInFormals\")\r\npublic <T> T deserialize(JsonElement json, Type typeOfT) throws JsonParseException;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\JsonDeserializationContext.java"
  }
]