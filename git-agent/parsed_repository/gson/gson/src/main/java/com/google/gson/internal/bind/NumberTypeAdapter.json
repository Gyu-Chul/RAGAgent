[
  {
    "type": "package",
    "name": "com.google.gson.internal.bind",
    "start_line": 17,
    "end_line": 17,
    "code": "package com.google.gson.internal.bind;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.Gson",
    "start_line": 19,
    "end_line": 19,
    "code": "import com.google.gson.Gson;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.JsonSyntaxException",
    "start_line": 20,
    "end_line": 20,
    "code": "import com.google.gson.JsonSyntaxException;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.ToNumberPolicy",
    "start_line": 21,
    "end_line": 21,
    "code": "import com.google.gson.ToNumberPolicy;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.ToNumberStrategy",
    "start_line": 22,
    "end_line": 22,
    "code": "import com.google.gson.ToNumberStrategy;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.TypeAdapter",
    "start_line": 23,
    "end_line": 23,
    "code": "import com.google.gson.TypeAdapter;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.TypeAdapterFactory",
    "start_line": 24,
    "end_line": 24,
    "code": "import com.google.gson.TypeAdapterFactory;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.reflect.TypeToken",
    "start_line": 25,
    "end_line": 25,
    "code": "import com.google.gson.reflect.TypeToken;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.stream.JsonReader",
    "start_line": 26,
    "end_line": 26,
    "code": "import com.google.gson.stream.JsonReader;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.stream.JsonToken",
    "start_line": 27,
    "end_line": 27,
    "code": "import com.google.gson.stream.JsonToken;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.stream.JsonWriter",
    "start_line": 28,
    "end_line": 28,
    "code": "import com.google.gson.stream.JsonWriter;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "import",
    "name": "java.io.IOException",
    "start_line": 29,
    "end_line": 29,
    "code": "import java.io.IOException;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "class",
    "name": "NumberTypeAdapter",
    "start_line": 32,
    "end_line": 82,
    "code": "/**\r\n * Type adapter for {@link Number}.\r\n */\r\npublic final class NumberTypeAdapter extends TypeAdapter<Number> {\r\n\r\n    /**\r\n     * Gson default factory using {@link ToNumberPolicy#LAZILY_PARSED_NUMBER}.\r\n     */\r\n    private static final TypeAdapterFactory LAZILY_PARSED_NUMBER_FACTORY = newFactory(ToNumberPolicy.LAZILY_PARSED_NUMBER);\r\n\r\n    private final ToNumberStrategy toNumberStrategy;\r\n\r\n    private NumberTypeAdapter(ToNumberStrategy toNumberStrategy) {\r\n        this.toNumberStrategy = toNumberStrategy;\r\n    }\r\n\r\n    private static TypeAdapterFactory newFactory(ToNumberStrategy toNumberStrategy) {\r\n        NumberTypeAdapter adapter = new NumberTypeAdapter(toNumberStrategy);\r\n        return new TypeAdapterFactory() {\r\n\r\n            @SuppressWarnings(\"unchecked\")\r\n            @Override\r\n            public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {\r\n                return type.getRawType() == Number.class ? (TypeAdapter<T>) adapter : null;\r\n            }\r\n        };\r\n    }\r\n\r\n    public static TypeAdapterFactory getFactory(ToNumberStrategy toNumberStrategy) {\r\n        if (toNumberStrategy == ToNumberPolicy.LAZILY_PARSED_NUMBER) {\r\n            return LAZILY_PARSED_NUMBER_FACTORY;\r\n        } else {\r\n            return newFactory(toNumberStrategy);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public Number read(JsonReader in) throws IOException {\r\n        JsonToken jsonToken = in.peek();\r\n        switch(jsonToken) {\r\n            case NULL:\r\n                in.nextNull();\r\n                return null;\r\n            case NUMBER:\r\n            case STRING:\r\n                return toNumberStrategy.readNumber(in);\r\n            default:\r\n                throw new JsonSyntaxException(\"Expecting number, got: \" + jsonToken + \"; at path \" + in.getPath());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void write(JsonWriter out, Number value) throws IOException {\r\n        out.value(value);\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "field",
    "name": "LAZILY_PARSED_NUMBER_FACTORY",
    "start_line": 34,
    "end_line": 35,
    "code": "/**\r\n * Gson default factory using {@link ToNumberPolicy#LAZILY_PARSED_NUMBER}.\r\n */\r\nprivate static final TypeAdapterFactory LAZILY_PARSED_NUMBER_FACTORY = newFactory(ToNumberPolicy.LAZILY_PARSED_NUMBER);",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "field",
    "name": "toNumberStrategy",
    "start_line": 37,
    "end_line": 37,
    "code": "private final ToNumberStrategy toNumberStrategy;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "constructor",
    "name": "NumberTypeAdapter",
    "start_line": 39,
    "end_line": 41,
    "code": "private NumberTypeAdapter(ToNumberStrategy toNumberStrategy) {\r\n    this.toNumberStrategy = toNumberStrategy;\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "method",
    "name": "newFactory",
    "start_line": 43,
    "end_line": 52,
    "code": "private static TypeAdapterFactory newFactory(ToNumberStrategy toNumberStrategy) {\r\n    NumberTypeAdapter adapter = new NumberTypeAdapter(toNumberStrategy);\r\n    return new TypeAdapterFactory() {\r\n\r\n        @SuppressWarnings(\"unchecked\")\r\n        @Override\r\n        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {\r\n            return type.getRawType() == Number.class ? (TypeAdapter<T>) adapter : null;\r\n        }\r\n    };\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "method",
    "name": "getFactory",
    "start_line": 54,
    "end_line": 60,
    "code": "public static TypeAdapterFactory getFactory(ToNumberStrategy toNumberStrategy) {\r\n    if (toNumberStrategy == ToNumberPolicy.LAZILY_PARSED_NUMBER) {\r\n        return LAZILY_PARSED_NUMBER_FACTORY;\r\n    } else {\r\n        return newFactory(toNumberStrategy);\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "method",
    "name": "read",
    "start_line": 62,
    "end_line": 76,
    "code": "@Override\r\npublic Number read(JsonReader in) throws IOException {\r\n    JsonToken jsonToken = in.peek();\r\n    switch(jsonToken) {\r\n        case NULL:\r\n            in.nextNull();\r\n            return null;\r\n        case NUMBER:\r\n        case STRING:\r\n            return toNumberStrategy.readNumber(in);\r\n        default:\r\n            throw new JsonSyntaxException(\"Expecting number, got: \" + jsonToken + \"; at path \" + in.getPath());\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  },
  {
    "type": "method",
    "name": "write",
    "start_line": 78,
    "end_line": 81,
    "code": "@Override\r\npublic void write(JsonWriter out, Number value) throws IOException {\r\n    out.value(value);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\main\\java\\com\\google\\gson\\internal\\bind\\NumberTypeAdapter.java"
  }
]