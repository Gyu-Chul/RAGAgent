[
  {
    "type": "package",
    "name": "com.google.gson.functional",
    "start_line": 16,
    "end_line": 16,
    "code": "package com.google.gson.functional;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "import",
    "name": "com.google.common.truth.Truth.assertThat",
    "start_line": 18,
    "end_line": 18,
    "code": "import static com.google.common.truth.Truth.assertThat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.Gson",
    "start_line": 20,
    "end_line": 20,
    "code": "import com.google.gson.Gson;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.GsonBuilder",
    "start_line": 21,
    "end_line": 21,
    "code": "import com.google.gson.GsonBuilder;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.annotations.Since",
    "start_line": 22,
    "end_line": 22,
    "code": "import com.google.gson.annotations.Since;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.annotations.Until",
    "start_line": 23,
    "end_line": 23,
    "code": "import com.google.gson.annotations.Until;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.common.TestTypes.BagOfPrimitives",
    "start_line": 24,
    "end_line": 24,
    "code": "import com.google.gson.common.TestTypes.BagOfPrimitives;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Test",
    "start_line": 25,
    "end_line": 25,
    "code": "import org.junit.Test;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "class",
    "name": "VersioningTest",
    "start_line": 33,
    "end_line": 210,
    "code": "/**\r\n * Functional tests for versioning support in Gson.\r\n *\r\n * @author Inderjeet Singh\r\n * @author Joel Leitch\r\n */\r\npublic class VersioningTest {\r\n\r\n    private static final int A = 0;\r\n\r\n    private static final int B = 1;\r\n\r\n    private static final int C = 2;\r\n\r\n    private static final int D = 3;\r\n\r\n    private static Gson gsonWithVersion(double version) {\r\n        return new GsonBuilder().setVersion(version).create();\r\n    }\r\n\r\n    @Test\r\n    public void testVersionedUntilSerialization() {\r\n        Version1 target = new Version1();\r\n        Gson gson = gsonWithVersion(1.29);\r\n        String json = gson.toJson(target);\r\n        assertThat(json).contains(\"\\\"a\\\":\" + A);\r\n        gson = gsonWithVersion(1.3);\r\n        json = gson.toJson(target);\r\n        assertThat(json).doesNotContain(\"\\\"a\\\":\" + A);\r\n        gson = gsonWithVersion(1.31);\r\n        json = gson.toJson(target);\r\n        assertThat(json).doesNotContain(\"\\\"a\\\":\" + A);\r\n    }\r\n\r\n    @Test\r\n    public void testVersionedUntilDeserialization() {\r\n        String json = \"{\\\"a\\\":3,\\\"b\\\":4,\\\"c\\\":5}\";\r\n        Gson gson = gsonWithVersion(1.29);\r\n        Version1 version1 = gson.fromJson(json, Version1.class);\r\n        assertThat(version1.a).isEqualTo(3);\r\n        gson = gsonWithVersion(1.3);\r\n        version1 = gson.fromJson(json, Version1.class);\r\n        assertThat(version1.a).isEqualTo(A);\r\n        gson = gsonWithVersion(1.31);\r\n        version1 = gson.fromJson(json, Version1.class);\r\n        assertThat(version1.a).isEqualTo(A);\r\n    }\r\n\r\n    @Test\r\n    public void testVersionedClassesSerialization() {\r\n        Gson gson = gsonWithVersion(1.0);\r\n        String json1 = gson.toJson(new Version1());\r\n        String json2 = gson.toJson(new Version1_1());\r\n        assertThat(json2).isEqualTo(json1);\r\n    }\r\n\r\n    @Test\r\n    public void testVersionedClassesDeserialization() {\r\n        Gson gson = gsonWithVersion(1.0);\r\n        String json = \"{\\\"a\\\":3,\\\"b\\\":4,\\\"c\\\":5}\";\r\n        Version1 version1 = gson.fromJson(json, Version1.class);\r\n        assertThat(version1.a).isEqualTo(3);\r\n        assertThat(version1.b).isEqualTo(4);\r\n        @SuppressWarnings(\"MemberName\")\r\n        Version1_1 version1_1 = gson.fromJson(json, Version1_1.class);\r\n        assertThat(version1_1.a).isEqualTo(3);\r\n        assertThat(version1_1.b).isEqualTo(4);\r\n        assertThat(version1_1.c).isEqualTo(C);\r\n    }\r\n\r\n    @Test\r\n    public void testIgnoreLaterVersionClassSerialization() {\r\n        Gson gson = gsonWithVersion(1.0);\r\n        assertThat(gson.toJson(new Version1_2())).isEqualTo(\"null\");\r\n    }\r\n\r\n    @Test\r\n    public void testIgnoreLaterVersionClassDeserialization() {\r\n        Gson gson = gsonWithVersion(1.0);\r\n        String json = \"{\\\"a\\\":3,\\\"b\\\":4,\\\"c\\\":5,\\\"d\\\":6}\";\r\n        @SuppressWarnings(\"MemberName\")\r\n        Version1_2 version1_2 = gson.fromJson(json, Version1_2.class);\r\n        // Since the class is versioned to be after 1.0, we expect null\r\n        // This is the new behavior in Gson 2.0\r\n        assertThat(version1_2).isNull();\r\n    }\r\n\r\n    @Test\r\n    public void testVersionedGsonWithUnversionedClassesSerialization() {\r\n        Gson gson = gsonWithVersion(1.0);\r\n        BagOfPrimitives target = new BagOfPrimitives(10, 20, false, \"stringValue\");\r\n        assertThat(gson.toJson(target)).isEqualTo(target.getExpectedJson());\r\n    }\r\n\r\n    @Test\r\n    public void testVersionedGsonWithUnversionedClassesDeserialization() {\r\n        Gson gson = gsonWithVersion(1.0);\r\n        String json = \"{\\\"longValue\\\":10,\\\"intValue\\\":20,\\\"booleanValue\\\":false}\";\r\n        BagOfPrimitives expected = new BagOfPrimitives();\r\n        expected.longValue = 10;\r\n        expected.intValue = 20;\r\n        expected.booleanValue = false;\r\n        BagOfPrimitives actual = gson.fromJson(json, BagOfPrimitives.class);\r\n        assertThat(actual).isEqualTo(expected);\r\n    }\r\n\r\n    @Test\r\n    public void testVersionedGsonMixingSinceAndUntilSerialization() {\r\n        Gson gson = gsonWithVersion(1.0);\r\n        SinceUntilMixing target = new SinceUntilMixing();\r\n        String json = gson.toJson(target);\r\n        assertThat(json).doesNotContain(\"\\\"b\\\":\" + B);\r\n        gson = gsonWithVersion(1.2);\r\n        json = gson.toJson(target);\r\n        assertThat(json).contains(\"\\\"b\\\":\" + B);\r\n        gson = gsonWithVersion(1.3);\r\n        json = gson.toJson(target);\r\n        assertThat(json).doesNotContain(\"\\\"b\\\":\" + B);\r\n        gson = gsonWithVersion(1.4);\r\n        json = gson.toJson(target);\r\n        assertThat(json).doesNotContain(\"\\\"b\\\":\" + B);\r\n    }\r\n\r\n    @Test\r\n    public void testVersionedGsonMixingSinceAndUntilDeserialization() {\r\n        String json = \"{\\\"a\\\":5,\\\"b\\\":6}\";\r\n        Gson gson = gsonWithVersion(1.0);\r\n        SinceUntilMixing result = gson.fromJson(json, SinceUntilMixing.class);\r\n        assertThat(result.a).isEqualTo(5);\r\n        assertThat(result.b).isEqualTo(B);\r\n        gson = gsonWithVersion(1.2);\r\n        result = gson.fromJson(json, SinceUntilMixing.class);\r\n        assertThat(result.a).isEqualTo(5);\r\n        assertThat(result.b).isEqualTo(6);\r\n        gson = gsonWithVersion(1.3);\r\n        result = gson.fromJson(json, SinceUntilMixing.class);\r\n        assertThat(result.a).isEqualTo(5);\r\n        assertThat(result.b).isEqualTo(B);\r\n        gson = gsonWithVersion(1.4);\r\n        result = gson.fromJson(json, SinceUntilMixing.class);\r\n        assertThat(result.a).isEqualTo(5);\r\n        assertThat(result.b).isEqualTo(B);\r\n    }\r\n\r\n    private static class Version1 {\r\n\r\n        @Until(1.3)\r\n        int a = A;\r\n\r\n        @Since(1.0)\r\n        int b = B;\r\n    }\r\n\r\n    @SuppressWarnings(\"MemberName\")\r\n    private static class Version1_1 extends Version1 {\r\n\r\n        @Since(1.1)\r\n        int c = C;\r\n    }\r\n\r\n    @SuppressWarnings(\"MemberName\")\r\n    @Since(1.2)\r\n    private static class Version1_2 extends Version1_1 {\r\n\r\n        @SuppressWarnings(\"unused\")\r\n        int d = D;\r\n    }\r\n\r\n    private static class SinceUntilMixing {\r\n\r\n        int a = A;\r\n\r\n        @Since(1.1)\r\n        @Until(1.3)\r\n        int b = B;\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "field",
    "name": "A",
    "start_line": 34,
    "end_line": 34,
    "code": "private static final int A = 0;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "field",
    "name": "B",
    "start_line": 35,
    "end_line": 35,
    "code": "private static final int B = 1;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "field",
    "name": "C",
    "start_line": 36,
    "end_line": 36,
    "code": "private static final int C = 2;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "field",
    "name": "D",
    "start_line": 37,
    "end_line": 37,
    "code": "private static final int D = 3;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "method",
    "name": "gsonWithVersion",
    "start_line": 39,
    "end_line": 41,
    "code": "private static Gson gsonWithVersion(double version) {\r\n    return new GsonBuilder().setVersion(version).create();\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "method",
    "name": "testVersionedUntilSerialization",
    "start_line": 43,
    "end_line": 57,
    "code": "@Test\r\npublic void testVersionedUntilSerialization() {\r\n    Version1 target = new Version1();\r\n    Gson gson = gsonWithVersion(1.29);\r\n    String json = gson.toJson(target);\r\n    assertThat(json).contains(\"\\\"a\\\":\" + A);\r\n    gson = gsonWithVersion(1.3);\r\n    json = gson.toJson(target);\r\n    assertThat(json).doesNotContain(\"\\\"a\\\":\" + A);\r\n    gson = gsonWithVersion(1.31);\r\n    json = gson.toJson(target);\r\n    assertThat(json).doesNotContain(\"\\\"a\\\":\" + A);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "method",
    "name": "testVersionedUntilDeserialization",
    "start_line": 59,
    "end_line": 74,
    "code": "@Test\r\npublic void testVersionedUntilDeserialization() {\r\n    String json = \"{\\\"a\\\":3,\\\"b\\\":4,\\\"c\\\":5}\";\r\n    Gson gson = gsonWithVersion(1.29);\r\n    Version1 version1 = gson.fromJson(json, Version1.class);\r\n    assertThat(version1.a).isEqualTo(3);\r\n    gson = gsonWithVersion(1.3);\r\n    version1 = gson.fromJson(json, Version1.class);\r\n    assertThat(version1.a).isEqualTo(A);\r\n    gson = gsonWithVersion(1.31);\r\n    version1 = gson.fromJson(json, Version1.class);\r\n    assertThat(version1.a).isEqualTo(A);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "method",
    "name": "testVersionedClassesSerialization",
    "start_line": 76,
    "end_line": 82,
    "code": "@Test\r\npublic void testVersionedClassesSerialization() {\r\n    Gson gson = gsonWithVersion(1.0);\r\n    String json1 = gson.toJson(new Version1());\r\n    String json2 = gson.toJson(new Version1_1());\r\n    assertThat(json2).isEqualTo(json1);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "method",
    "name": "testVersionedClassesDeserialization",
    "start_line": 84,
    "end_line": 98,
    "code": "@Test\r\npublic void testVersionedClassesDeserialization() {\r\n    Gson gson = gsonWithVersion(1.0);\r\n    String json = \"{\\\"a\\\":3,\\\"b\\\":4,\\\"c\\\":5}\";\r\n    Version1 version1 = gson.fromJson(json, Version1.class);\r\n    assertThat(version1.a).isEqualTo(3);\r\n    assertThat(version1.b).isEqualTo(4);\r\n    @SuppressWarnings(\"MemberName\")\r\n    Version1_1 version1_1 = gson.fromJson(json, Version1_1.class);\r\n    assertThat(version1_1.a).isEqualTo(3);\r\n    assertThat(version1_1.b).isEqualTo(4);\r\n    assertThat(version1_1.c).isEqualTo(C);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "method",
    "name": "testIgnoreLaterVersionClassSerialization",
    "start_line": 100,
    "end_line": 104,
    "code": "@Test\r\npublic void testIgnoreLaterVersionClassSerialization() {\r\n    Gson gson = gsonWithVersion(1.0);\r\n    assertThat(gson.toJson(new Version1_2())).isEqualTo(\"null\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "method",
    "name": "testIgnoreLaterVersionClassDeserialization",
    "start_line": 106,
    "end_line": 116,
    "code": "@Test\r\npublic void testIgnoreLaterVersionClassDeserialization() {\r\n    Gson gson = gsonWithVersion(1.0);\r\n    String json = \"{\\\"a\\\":3,\\\"b\\\":4,\\\"c\\\":5,\\\"d\\\":6}\";\r\n    @SuppressWarnings(\"MemberName\")\r\n    Version1_2 version1_2 = gson.fromJson(json, Version1_2.class);\r\n    // Since the class is versioned to be after 1.0, we expect null\r\n    // This is the new behavior in Gson 2.0\r\n    assertThat(version1_2).isNull();\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "method",
    "name": "testVersionedGsonWithUnversionedClassesSerialization",
    "start_line": 118,
    "end_line": 123,
    "code": "@Test\r\npublic void testVersionedGsonWithUnversionedClassesSerialization() {\r\n    Gson gson = gsonWithVersion(1.0);\r\n    BagOfPrimitives target = new BagOfPrimitives(10, 20, false, \"stringValue\");\r\n    assertThat(gson.toJson(target)).isEqualTo(target.getExpectedJson());\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "method",
    "name": "testVersionedGsonWithUnversionedClassesDeserialization",
    "start_line": 125,
    "end_line": 136,
    "code": "@Test\r\npublic void testVersionedGsonWithUnversionedClassesDeserialization() {\r\n    Gson gson = gsonWithVersion(1.0);\r\n    String json = \"{\\\"longValue\\\":10,\\\"intValue\\\":20,\\\"booleanValue\\\":false}\";\r\n    BagOfPrimitives expected = new BagOfPrimitives();\r\n    expected.longValue = 10;\r\n    expected.intValue = 20;\r\n    expected.booleanValue = false;\r\n    BagOfPrimitives actual = gson.fromJson(json, BagOfPrimitives.class);\r\n    assertThat(actual).isEqualTo(expected);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "method",
    "name": "testVersionedGsonMixingSinceAndUntilSerialization",
    "start_line": 138,
    "end_line": 156,
    "code": "@Test\r\npublic void testVersionedGsonMixingSinceAndUntilSerialization() {\r\n    Gson gson = gsonWithVersion(1.0);\r\n    SinceUntilMixing target = new SinceUntilMixing();\r\n    String json = gson.toJson(target);\r\n    assertThat(json).doesNotContain(\"\\\"b\\\":\" + B);\r\n    gson = gsonWithVersion(1.2);\r\n    json = gson.toJson(target);\r\n    assertThat(json).contains(\"\\\"b\\\":\" + B);\r\n    gson = gsonWithVersion(1.3);\r\n    json = gson.toJson(target);\r\n    assertThat(json).doesNotContain(\"\\\"b\\\":\" + B);\r\n    gson = gsonWithVersion(1.4);\r\n    json = gson.toJson(target);\r\n    assertThat(json).doesNotContain(\"\\\"b\\\":\" + B);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  },
  {
    "type": "method",
    "name": "testVersionedGsonMixingSinceAndUntilDeserialization",
    "start_line": 158,
    "end_line": 180,
    "code": "@Test\r\npublic void testVersionedGsonMixingSinceAndUntilDeserialization() {\r\n    String json = \"{\\\"a\\\":5,\\\"b\\\":6}\";\r\n    Gson gson = gsonWithVersion(1.0);\r\n    SinceUntilMixing result = gson.fromJson(json, SinceUntilMixing.class);\r\n    assertThat(result.a).isEqualTo(5);\r\n    assertThat(result.b).isEqualTo(B);\r\n    gson = gsonWithVersion(1.2);\r\n    result = gson.fromJson(json, SinceUntilMixing.class);\r\n    assertThat(result.a).isEqualTo(5);\r\n    assertThat(result.b).isEqualTo(6);\r\n    gson = gsonWithVersion(1.3);\r\n    result = gson.fromJson(json, SinceUntilMixing.class);\r\n    assertThat(result.a).isEqualTo(5);\r\n    assertThat(result.b).isEqualTo(B);\r\n    gson = gsonWithVersion(1.4);\r\n    result = gson.fromJson(json, SinceUntilMixing.class);\r\n    assertThat(result.a).isEqualTo(5);\r\n    assertThat(result.b).isEqualTo(B);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\VersioningTest.java"
  }
]