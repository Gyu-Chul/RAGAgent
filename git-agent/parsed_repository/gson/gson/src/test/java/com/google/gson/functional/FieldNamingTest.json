[
  {
    "type": "package",
    "name": "com.google.gson.functional",
    "start_line": 17,
    "end_line": 17,
    "code": "package com.google.gson.functional;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.common.truth.Truth.assertThat",
    "start_line": 19,
    "end_line": 19,
    "code": "import static com.google.common.truth.Truth.assertThat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.FieldNamingPolicy.IDENTITY",
    "start_line": 20,
    "end_line": 20,
    "code": "import static com.google.gson.FieldNamingPolicy.IDENTITY;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.FieldNamingPolicy.LOWER_CASE_WITH_DASHES",
    "start_line": 21,
    "end_line": 21,
    "code": "import static com.google.gson.FieldNamingPolicy.LOWER_CASE_WITH_DASHES;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES",
    "start_line": 22,
    "end_line": 22,
    "code": "import static com.google.gson.FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.FieldNamingPolicy.UPPER_CAMEL_CASE",
    "start_line": 23,
    "end_line": 23,
    "code": "import static com.google.gson.FieldNamingPolicy.UPPER_CAMEL_CASE;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.FieldNamingPolicy.UPPER_CAMEL_CASE_WITH_SPACES",
    "start_line": 24,
    "end_line": 24,
    "code": "import static com.google.gson.FieldNamingPolicy.UPPER_CAMEL_CASE_WITH_SPACES;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.FieldNamingPolicy.UPPER_CASE_WITH_UNDERSCORES",
    "start_line": 25,
    "end_line": 25,
    "code": "import static com.google.gson.FieldNamingPolicy.UPPER_CASE_WITH_UNDERSCORES;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.FieldNamingPolicy",
    "start_line": 27,
    "end_line": 27,
    "code": "import com.google.gson.FieldNamingPolicy;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.Gson",
    "start_line": 28,
    "end_line": 28,
    "code": "import com.google.gson.Gson;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.GsonBuilder",
    "start_line": 29,
    "end_line": 29,
    "code": "import com.google.gson.GsonBuilder;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.annotations.SerializedName",
    "start_line": 30,
    "end_line": 30,
    "code": "import com.google.gson.annotations.SerializedName;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Test",
    "start_line": 31,
    "end_line": 31,
    "code": "import org.junit.Test;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "class",
    "name": "FieldNamingTest",
    "start_line": 33,
    "end_line": 114,
    "code": "public final class FieldNamingTest {\r\n\r\n    @Test\r\n    public void testIdentity() {\r\n        Gson gson = getGsonWithNamingPolicy(IDENTITY);\r\n        assertThat(gson.toJson(new TestNames()).replace('\\\"', '\\'')).isEqualTo(\"{'lowerCamel':1,'UpperCamel':2,'_lowerCamelLeadingUnderscore':3,\" + \"'_UpperCamelLeadingUnderscore':4,'lower_words':5,'UPPER_WORDS':6,\" + \"'annotatedName':7,'lowerId':8,'_9':9}\");\r\n    }\r\n\r\n    @Test\r\n    public void testUpperCamelCase() {\r\n        Gson gson = getGsonWithNamingPolicy(UPPER_CAMEL_CASE);\r\n        assertThat(gson.toJson(new TestNames()).replace('\\\"', '\\'')).isEqualTo(\"{'LowerCamel':1,'UpperCamel':2,'_LowerCamelLeadingUnderscore':3,\" + \"'_UpperCamelLeadingUnderscore':4,'Lower_words':5,'UPPER_WORDS':6,\" + \"'annotatedName':7,'LowerId':8,'_9':9}\");\r\n    }\r\n\r\n    @Test\r\n    public void testUpperCamelCaseWithSpaces() {\r\n        Gson gson = getGsonWithNamingPolicy(UPPER_CAMEL_CASE_WITH_SPACES);\r\n        assertThat(gson.toJson(new TestNames()).replace('\\\"', '\\'')).isEqualTo(\"{'Lower Camel':1,'Upper Camel':2,'_Lower Camel Leading Underscore':3,\" + \"'_ Upper Camel Leading Underscore':4,'Lower_words':5,'U P P E R_ W O R D S':6,\" + \"'annotatedName':7,'Lower Id':8,'_9':9}\");\r\n    }\r\n\r\n    @Test\r\n    public void testUpperCaseWithUnderscores() {\r\n        Gson gson = getGsonWithNamingPolicy(UPPER_CASE_WITH_UNDERSCORES);\r\n        assertThat(gson.toJson(new TestNames()).replace('\\\"', '\\'')).isEqualTo(\"{'LOWER_CAMEL':1,'UPPER_CAMEL':2,'_LOWER_CAMEL_LEADING_UNDERSCORE':3,\" + \"'__UPPER_CAMEL_LEADING_UNDERSCORE':4,'LOWER_WORDS':5,'U_P_P_E_R__W_O_R_D_S':6,\" + \"'annotatedName':7,'LOWER_ID':8,'_9':9}\");\r\n    }\r\n\r\n    @Test\r\n    public void testLowerCaseWithUnderscores() {\r\n        Gson gson = getGsonWithNamingPolicy(LOWER_CASE_WITH_UNDERSCORES);\r\n        assertThat(gson.toJson(new TestNames()).replace('\\\"', '\\'')).isEqualTo(\"{'lower_camel':1,'upper_camel':2,'_lower_camel_leading_underscore':3,\" + \"'__upper_camel_leading_underscore':4,'lower_words':5,'u_p_p_e_r__w_o_r_d_s':6,\" + \"'annotatedName':7,'lower_id':8,'_9':9}\");\r\n    }\r\n\r\n    @Test\r\n    public void testLowerCaseWithDashes() {\r\n        Gson gson = getGsonWithNamingPolicy(LOWER_CASE_WITH_DASHES);\r\n        assertThat(gson.toJson(new TestNames()).replace('\\\"', '\\'')).isEqualTo(\"{'lower-camel':1,'upper-camel':2,'_lower-camel-leading-underscore':3,\" + \"'_-upper-camel-leading-underscore':4,'lower_words':5,'u-p-p-e-r_-w-o-r-d-s':6,\" + \"'annotatedName':7,'lower-id':8,'_9':9}\");\r\n    }\r\n\r\n    private static Gson getGsonWithNamingPolicy(FieldNamingPolicy fieldNamingPolicy) {\r\n        return new GsonBuilder().setFieldNamingPolicy(fieldNamingPolicy).create();\r\n    }\r\n\r\n    // Suppress because fields are used reflectively, and the names are intentionally unconventional\r\n    @SuppressWarnings({ \"unused\", \"MemberName\", \"ConstantField\" })\r\n    private static class TestNames {\r\n\r\n        int lowerCamel = 1;\r\n\r\n        int UpperCamel = 2;\r\n\r\n        int _lowerCamelLeadingUnderscore = 3;\r\n\r\n        int _UpperCamelLeadingUnderscore = 4;\r\n\r\n        int lower_words = 5;\r\n\r\n        int UPPER_WORDS = 6;\r\n\r\n        @SerializedName(\"annotatedName\")\r\n        int annotated = 7;\r\n\r\n        int lowerId = 8;\r\n\r\n        int _9 = 9;\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "method",
    "name": "testIdentity",
    "start_line": 34,
    "end_line": 42,
    "code": "@Test\r\npublic void testIdentity() {\r\n    Gson gson = getGsonWithNamingPolicy(IDENTITY);\r\n    assertThat(gson.toJson(new TestNames()).replace('\\\"', '\\'')).isEqualTo(\"{'lowerCamel':1,'UpperCamel':2,'_lowerCamelLeadingUnderscore':3,\" + \"'_UpperCamelLeadingUnderscore':4,'lower_words':5,'UPPER_WORDS':6,\" + \"'annotatedName':7,'lowerId':8,'_9':9}\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "method",
    "name": "testUpperCamelCase",
    "start_line": 44,
    "end_line": 52,
    "code": "@Test\r\npublic void testUpperCamelCase() {\r\n    Gson gson = getGsonWithNamingPolicy(UPPER_CAMEL_CASE);\r\n    assertThat(gson.toJson(new TestNames()).replace('\\\"', '\\'')).isEqualTo(\"{'LowerCamel':1,'UpperCamel':2,'_LowerCamelLeadingUnderscore':3,\" + \"'_UpperCamelLeadingUnderscore':4,'Lower_words':5,'UPPER_WORDS':6,\" + \"'annotatedName':7,'LowerId':8,'_9':9}\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "method",
    "name": "testUpperCamelCaseWithSpaces",
    "start_line": 54,
    "end_line": 62,
    "code": "@Test\r\npublic void testUpperCamelCaseWithSpaces() {\r\n    Gson gson = getGsonWithNamingPolicy(UPPER_CAMEL_CASE_WITH_SPACES);\r\n    assertThat(gson.toJson(new TestNames()).replace('\\\"', '\\'')).isEqualTo(\"{'Lower Camel':1,'Upper Camel':2,'_Lower Camel Leading Underscore':3,\" + \"'_ Upper Camel Leading Underscore':4,'Lower_words':5,'U P P E R_ W O R D S':6,\" + \"'annotatedName':7,'Lower Id':8,'_9':9}\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "method",
    "name": "testUpperCaseWithUnderscores",
    "start_line": 64,
    "end_line": 72,
    "code": "@Test\r\npublic void testUpperCaseWithUnderscores() {\r\n    Gson gson = getGsonWithNamingPolicy(UPPER_CASE_WITH_UNDERSCORES);\r\n    assertThat(gson.toJson(new TestNames()).replace('\\\"', '\\'')).isEqualTo(\"{'LOWER_CAMEL':1,'UPPER_CAMEL':2,'_LOWER_CAMEL_LEADING_UNDERSCORE':3,\" + \"'__UPPER_CAMEL_LEADING_UNDERSCORE':4,'LOWER_WORDS':5,'U_P_P_E_R__W_O_R_D_S':6,\" + \"'annotatedName':7,'LOWER_ID':8,'_9':9}\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "method",
    "name": "testLowerCaseWithUnderscores",
    "start_line": 74,
    "end_line": 82,
    "code": "@Test\r\npublic void testLowerCaseWithUnderscores() {\r\n    Gson gson = getGsonWithNamingPolicy(LOWER_CASE_WITH_UNDERSCORES);\r\n    assertThat(gson.toJson(new TestNames()).replace('\\\"', '\\'')).isEqualTo(\"{'lower_camel':1,'upper_camel':2,'_lower_camel_leading_underscore':3,\" + \"'__upper_camel_leading_underscore':4,'lower_words':5,'u_p_p_e_r__w_o_r_d_s':6,\" + \"'annotatedName':7,'lower_id':8,'_9':9}\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "method",
    "name": "testLowerCaseWithDashes",
    "start_line": 84,
    "end_line": 92,
    "code": "@Test\r\npublic void testLowerCaseWithDashes() {\r\n    Gson gson = getGsonWithNamingPolicy(LOWER_CASE_WITH_DASHES);\r\n    assertThat(gson.toJson(new TestNames()).replace('\\\"', '\\'')).isEqualTo(\"{'lower-camel':1,'upper-camel':2,'_lower-camel-leading-underscore':3,\" + \"'_-upper-camel-leading-underscore':4,'lower_words':5,'u-p-p-e-r_-w-o-r-d-s':6,\" + \"'annotatedName':7,'lower-id':8,'_9':9}\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  },
  {
    "type": "method",
    "name": "getGsonWithNamingPolicy",
    "start_line": 94,
    "end_line": 96,
    "code": "private static Gson getGsonWithNamingPolicy(FieldNamingPolicy fieldNamingPolicy) {\r\n    return new GsonBuilder().setFieldNamingPolicy(fieldNamingPolicy).create();\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\FieldNamingTest.java"
  }
]