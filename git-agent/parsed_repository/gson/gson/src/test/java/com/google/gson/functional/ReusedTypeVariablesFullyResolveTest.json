[
  {
    "type": "package",
    "name": "com.google.gson.functional",
    "start_line": 17,
    "end_line": 17,
    "code": "package com.google.gson.functional;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\ReusedTypeVariablesFullyResolveTest.java"
  },
  {
    "type": "import",
    "name": "com.google.common.truth.Truth.assertThat",
    "start_line": 19,
    "end_line": 19,
    "code": "import static com.google.common.truth.Truth.assertThat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\ReusedTypeVariablesFullyResolveTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.Gson",
    "start_line": 21,
    "end_line": 21,
    "code": "import com.google.gson.Gson;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\ReusedTypeVariablesFullyResolveTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.GsonBuilder",
    "start_line": 22,
    "end_line": 22,
    "code": "import com.google.gson.GsonBuilder;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\ReusedTypeVariablesFullyResolveTest.java"
  },
  {
    "type": "import",
    "name": "java.util.Collection",
    "start_line": 23,
    "end_line": 23,
    "code": "import java.util.Collection;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\ReusedTypeVariablesFullyResolveTest.java"
  },
  {
    "type": "import",
    "name": "java.util.Iterator",
    "start_line": 24,
    "end_line": 24,
    "code": "import java.util.Iterator;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\ReusedTypeVariablesFullyResolveTest.java"
  },
  {
    "type": "import",
    "name": "java.util.Set",
    "start_line": 25,
    "end_line": 25,
    "code": "import java.util.Set;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\ReusedTypeVariablesFullyResolveTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Before",
    "start_line": 26,
    "end_line": 26,
    "code": "import org.junit.Before;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\ReusedTypeVariablesFullyResolveTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Test",
    "start_line": 27,
    "end_line": 27,
    "code": "import org.junit.Test;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\ReusedTypeVariablesFullyResolveTest.java"
  },
  {
    "type": "class",
    "name": "ReusedTypeVariablesFullyResolveTest",
    "start_line": 34,
    "end_line": 73,
    "code": "/**\r\n * This test covers the scenario described in #1390 where a type variable needs to be used by a type\r\n * definition multiple times. Both type variable references should resolve to the same underlying\r\n * concrete type.\r\n */\r\npublic class ReusedTypeVariablesFullyResolveTest {\r\n\r\n    private Gson gson;\r\n\r\n    @Before\r\n    public void setUp() {\r\n        gson = new GsonBuilder().create();\r\n    }\r\n\r\n    // The instances were being unmarshaled as Strings instead of TestEnums\r\n    @SuppressWarnings(\"ConstantConditions\")\r\n    @Test\r\n    public void testGenericsPreservation() {\r\n        TestEnumSetCollection withSet = gson.fromJson(\"{\\\"collection\\\":[\\\"ONE\\\",\\\"THREE\\\"]}\", TestEnumSetCollection.class);\r\n        Iterator<TestEnum> iterator = withSet.collection.iterator();\r\n        assertThat(withSet).isNotNull();\r\n        assertThat(withSet.collection).isNotNull();\r\n        assertThat(withSet.collection).hasSize(2);\r\n        TestEnum first = iterator.next();\r\n        TestEnum second = iterator.next();\r\n        assertThat(first).isInstanceOf(TestEnum.class);\r\n        assertThat(second).isInstanceOf(TestEnum.class);\r\n    }\r\n\r\n    enum TestEnum {\r\n\r\n        ONE, TWO, THREE\r\n    }\r\n\r\n    private static class TestEnumSetCollection extends SetCollection<TestEnum> {\r\n    }\r\n\r\n    private static class SetCollection<T> extends BaseCollection<T, Set<T>> {\r\n    }\r\n\r\n    private static class BaseCollection<U, C extends Collection<U>> {\r\n\r\n        public C collection;\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\ReusedTypeVariablesFullyResolveTest.java"
  },
  {
    "type": "field",
    "name": "gson",
    "start_line": 36,
    "end_line": 36,
    "code": "private Gson gson;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\ReusedTypeVariablesFullyResolveTest.java"
  },
  {
    "type": "method",
    "name": "setUp",
    "start_line": 38,
    "end_line": 41,
    "code": "@Before\r\npublic void setUp() {\r\n    gson = new GsonBuilder().create();\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\ReusedTypeVariablesFullyResolveTest.java"
  },
  {
    "type": "method",
    "name": "testGenericsPreservation",
    "start_line": 44,
    "end_line": 58,
    "code": "// The instances were being unmarshaled as Strings instead of TestEnums\r\n@SuppressWarnings(\"ConstantConditions\")\r\n@Test\r\npublic void testGenericsPreservation() {\r\n    TestEnumSetCollection withSet = gson.fromJson(\"{\\\"collection\\\":[\\\"ONE\\\",\\\"THREE\\\"]}\", TestEnumSetCollection.class);\r\n    Iterator<TestEnum> iterator = withSet.collection.iterator();\r\n    assertThat(withSet).isNotNull();\r\n    assertThat(withSet.collection).isNotNull();\r\n    assertThat(withSet.collection).hasSize(2);\r\n    TestEnum first = iterator.next();\r\n    TestEnum second = iterator.next();\r\n    assertThat(first).isInstanceOf(TestEnum.class);\r\n    assertThat(second).isInstanceOf(TestEnum.class);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\ReusedTypeVariablesFullyResolveTest.java"
  }
]