[
  {
    "type": "package",
    "name": "com.google.gson.functional",
    "start_line": 16,
    "end_line": 16,
    "code": "package com.google.gson.functional;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "com.google.common.truth.Truth.assertThat",
    "start_line": 18,
    "end_line": 18,
    "code": "import static com.google.common.truth.Truth.assertThat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.Gson",
    "start_line": 20,
    "end_line": 20,
    "code": "import com.google.gson.Gson;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.GsonBuilder",
    "start_line": 21,
    "end_line": 21,
    "code": "import com.google.gson.GsonBuilder;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.TypeAdapter",
    "start_line": 22,
    "end_line": 22,
    "code": "import com.google.gson.TypeAdapter;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.TypeAdapterFactory",
    "start_line": 23,
    "end_line": 23,
    "code": "import com.google.gson.TypeAdapterFactory;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.common.TestTypes.BagOfPrimitives",
    "start_line": 24,
    "end_line": 24,
    "code": "import com.google.gson.common.TestTypes.BagOfPrimitives;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.reflect.TypeToken",
    "start_line": 25,
    "end_line": 25,
    "code": "import com.google.gson.reflect.TypeToken;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.stream.JsonReader",
    "start_line": 26,
    "end_line": 26,
    "code": "import com.google.gson.stream.JsonReader;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.stream.JsonWriter",
    "start_line": 27,
    "end_line": 27,
    "code": "import com.google.gson.stream.JsonWriter;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "java.io.IOException",
    "start_line": 28,
    "end_line": 28,
    "code": "import java.io.IOException;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "java.util.ArrayList",
    "start_line": 29,
    "end_line": 29,
    "code": "import java.util.ArrayList;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "java.util.List",
    "start_line": 30,
    "end_line": 30,
    "code": "import java.util.List;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Before",
    "start_line": 31,
    "end_line": 31,
    "code": "import org.junit.Before;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Test",
    "start_line": 32,
    "end_line": 32,
    "code": "import org.junit.Test;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "class",
    "name": "DelegateTypeAdapterTest",
    "start_line": 39,
    "end_line": 96,
    "code": "/**\r\n * Functional tests for {@link Gson#getDelegateAdapter(TypeAdapterFactory, TypeToken)} method.\r\n *\r\n * @author Inderjeet Singh\r\n */\r\npublic class DelegateTypeAdapterTest {\r\n\r\n    private StatsTypeAdapterFactory stats;\r\n\r\n    private Gson gson;\r\n\r\n    @Before\r\n    public void setUp() throws Exception {\r\n        stats = new StatsTypeAdapterFactory();\r\n        gson = new GsonBuilder().registerTypeAdapterFactory(stats).create();\r\n    }\r\n\r\n    @Test\r\n    public void testDelegateInvoked() {\r\n        List<BagOfPrimitives> bags = new ArrayList<>();\r\n        for (int i = 0; i < 10; ++i) {\r\n            bags.add(new BagOfPrimitives(i, i, i % 2 == 0, String.valueOf(i)));\r\n        }\r\n        String json = gson.toJson(bags);\r\n        List<BagOfPrimitives> unused = gson.fromJson(json, new TypeToken<List<BagOfPrimitives>>() {\r\n        }.getType());\r\n        // 11: 1 list object, and 10 entries. stats invoked on all 5 fields\r\n        assertThat(stats.numReads).isEqualTo(51);\r\n        assertThat(stats.numWrites).isEqualTo(51);\r\n    }\r\n\r\n    @Test\r\n    public void testDelegateInvokedOnStrings() {\r\n        String[] bags = { \"1\", \"2\", \"3\", \"4\" };\r\n        String json = gson.toJson(bags);\r\n        String[] unused = gson.fromJson(json, String[].class);\r\n        // 1 array object with 4 elements.\r\n        assertThat(stats.numReads).isEqualTo(5);\r\n        assertThat(stats.numWrites).isEqualTo(5);\r\n    }\r\n\r\n    private static class StatsTypeAdapterFactory implements TypeAdapterFactory {\r\n\r\n        public int numReads = 0;\r\n\r\n        public int numWrites = 0;\r\n\r\n        @Override\r\n        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {\r\n            TypeAdapter<T> delegate = gson.getDelegateAdapter(this, type);\r\n            return new TypeAdapter<>() {\r\n\r\n                @Override\r\n                public void write(JsonWriter out, T value) throws IOException {\r\n                    ++numWrites;\r\n                    delegate.write(out, value);\r\n                }\r\n\r\n                @Override\r\n                public T read(JsonReader in) throws IOException {\r\n                    ++numReads;\r\n                    return delegate.read(in);\r\n                }\r\n            };\r\n        }\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "field",
    "name": "stats",
    "start_line": 41,
    "end_line": 41,
    "code": "private StatsTypeAdapterFactory stats;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "field",
    "name": "gson",
    "start_line": 42,
    "end_line": 42,
    "code": "private Gson gson;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "method",
    "name": "setUp",
    "start_line": 44,
    "end_line": 48,
    "code": "@Before\r\npublic void setUp() throws Exception {\r\n    stats = new StatsTypeAdapterFactory();\r\n    gson = new GsonBuilder().registerTypeAdapterFactory(stats).create();\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "method",
    "name": "testDelegateInvoked",
    "start_line": 50,
    "end_line": 62,
    "code": "@Test\r\npublic void testDelegateInvoked() {\r\n    List<BagOfPrimitives> bags = new ArrayList<>();\r\n    for (int i = 0; i < 10; ++i) {\r\n        bags.add(new BagOfPrimitives(i, i, i % 2 == 0, String.valueOf(i)));\r\n    }\r\n    String json = gson.toJson(bags);\r\n    List<BagOfPrimitives> unused = gson.fromJson(json, new TypeToken<List<BagOfPrimitives>>() {\r\n    }.getType());\r\n    // 11: 1 list object, and 10 entries. stats invoked on all 5 fields\r\n    assertThat(stats.numReads).isEqualTo(51);\r\n    assertThat(stats.numWrites).isEqualTo(51);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  },
  {
    "type": "method",
    "name": "testDelegateInvokedOnStrings",
    "start_line": 64,
    "end_line": 72,
    "code": "@Test\r\npublic void testDelegateInvokedOnStrings() {\r\n    String[] bags = { \"1\", \"2\", \"3\", \"4\" };\r\n    String json = gson.toJson(bags);\r\n    String[] unused = gson.fromJson(json, String[].class);\r\n    // 1 array object with 4 elements.\r\n    assertThat(stats.numReads).isEqualTo(5);\r\n    assertThat(stats.numWrites).isEqualTo(5);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\DelegateTypeAdapterTest.java"
  }
]