[
  {
    "type": "package",
    "name": "com.google.gson.functional",
    "start_line": 17,
    "end_line": 17,
    "code": "package com.google.gson.functional;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "com.google.common.truth.Truth.assertThat",
    "start_line": 19,
    "end_line": 19,
    "code": "import static com.google.common.truth.Truth.assertThat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.Gson",
    "start_line": 21,
    "end_line": 21,
    "code": "import com.google.gson.Gson;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.GsonBuilder",
    "start_line": 22,
    "end_line": 22,
    "code": "import com.google.gson.GsonBuilder;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.JsonDeserializationContext",
    "start_line": 23,
    "end_line": 23,
    "code": "import com.google.gson.JsonDeserializationContext;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.JsonDeserializer",
    "start_line": 24,
    "end_line": 24,
    "code": "import com.google.gson.JsonDeserializer;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.JsonElement",
    "start_line": 25,
    "end_line": 25,
    "code": "import com.google.gson.JsonElement;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.JsonParseException",
    "start_line": 26,
    "end_line": 26,
    "code": "import com.google.gson.JsonParseException;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.JsonPrimitive",
    "start_line": 27,
    "end_line": 27,
    "code": "import com.google.gson.JsonPrimitive;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.JsonSerializationContext",
    "start_line": 28,
    "end_line": 28,
    "code": "import com.google.gson.JsonSerializationContext;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.JsonSerializer",
    "start_line": 29,
    "end_line": 29,
    "code": "import com.google.gson.JsonSerializer;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.reflect.TypeToken",
    "start_line": 30,
    "end_line": 30,
    "code": "import com.google.gson.reflect.TypeToken;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "java.lang.reflect.ParameterizedType",
    "start_line": 31,
    "end_line": 31,
    "code": "import java.lang.reflect.ParameterizedType;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "java.lang.reflect.Type",
    "start_line": 32,
    "end_line": 32,
    "code": "import java.lang.reflect.Type;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "java.util.ArrayList",
    "start_line": 33,
    "end_line": 33,
    "code": "import java.util.ArrayList;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "java.util.Arrays",
    "start_line": 34,
    "end_line": 34,
    "code": "import java.util.Arrays;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "java.util.List",
    "start_line": 35,
    "end_line": 35,
    "code": "import java.util.List;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Before",
    "start_line": 36,
    "end_line": 36,
    "code": "import org.junit.Before;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Test",
    "start_line": 37,
    "end_line": 37,
    "code": "import org.junit.Test;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "class",
    "name": "TreeTypeAdaptersTest",
    "start_line": 40,
    "end_line": 186,
    "code": "/**\r\n * Collection of functional tests for DOM tree based type adapters.\r\n */\r\npublic class TreeTypeAdaptersTest {\r\n\r\n    private static final Id<Student> STUDENT1_ID = new Id<>(\"5\", Student.class);\r\n\r\n    private static final Id<Student> STUDENT2_ID = new Id<>(\"6\", Student.class);\r\n\r\n    private static final Student STUDENT1 = new Student(STUDENT1_ID, \"first\");\r\n\r\n    private static final Student STUDENT2 = new Student(STUDENT2_ID, \"second\");\r\n\r\n    private static final Type TYPE_COURSE_HISTORY = new TypeToken<Course<HistoryCourse>>() {\r\n    }.getType();\r\n\r\n    private static final Id<Course<HistoryCourse>> COURSE_ID = new Id<>(\"10\", TYPE_COURSE_HISTORY);\r\n\r\n    private Gson gson;\r\n\r\n    private Course<HistoryCourse> course;\r\n\r\n    @Before\r\n    public void setUp() {\r\n        gson = new GsonBuilder().registerTypeAdapter(Id.class, new IdTreeTypeAdapter()).create();\r\n        course = new Course<>(COURSE_ID, 4, new Assignment<HistoryCourse>(null, null), Arrays.asList(STUDENT1, STUDENT2));\r\n    }\r\n\r\n    @Test\r\n    public void testSerializeId() {\r\n        String json = gson.toJson(course, TYPE_COURSE_HISTORY);\r\n        assertThat(json).contains(String.valueOf(COURSE_ID.getValue()));\r\n        assertThat(json).contains(String.valueOf(STUDENT1_ID.getValue()));\r\n        assertThat(json).contains(String.valueOf(STUDENT2_ID.getValue()));\r\n    }\r\n\r\n    @Test\r\n    public void testDeserializeId() {\r\n        String json = \"{courseId:1,students:[{id:1,name:'first'},{id:6,name:'second'}],\" + \"numAssignments:4,assignment:{}}\";\r\n        Course<HistoryCourse> target = gson.fromJson(json, TYPE_COURSE_HISTORY);\r\n        assertThat(target.getStudents().get(0).id.getValue()).isEqualTo(\"1\");\r\n        assertThat(target.getStudents().get(1).id.getValue()).isEqualTo(\"6\");\r\n        assertThat(target.getId().getValue()).isEqualTo(\"1\");\r\n    }\r\n\r\n    @SuppressWarnings(\"UnusedTypeParameter\")\r\n    private static final class Id<R> {\r\n\r\n        final String value;\r\n\r\n        @SuppressWarnings(\"unused\")\r\n        final Type typeOfId;\r\n\r\n        private Id(String value, Type typeOfId) {\r\n            this.value = value;\r\n            this.typeOfId = typeOfId;\r\n        }\r\n\r\n        public String getValue() {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    private static final class IdTreeTypeAdapter implements JsonSerializer<Id<?>>, JsonDeserializer<Id<?>> {\r\n\r\n        @Override\r\n        public Id<?> deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\r\n            if (!(typeOfT instanceof ParameterizedType)) {\r\n                throw new JsonParseException(\"Id of unknown type: \" + typeOfT);\r\n            }\r\n            ParameterizedType parameterizedType = (ParameterizedType) typeOfT;\r\n            // Since Id takes only one TypeVariable, the actual type corresponding to the first\r\n            // TypeVariable is the Type we are looking for\r\n            Type typeOfId = parameterizedType.getActualTypeArguments()[0];\r\n            return new Id<>(json.getAsString(), typeOfId);\r\n        }\r\n\r\n        @Override\r\n        public JsonElement serialize(Id<?> src, Type typeOfSrc, JsonSerializationContext context) {\r\n            return new JsonPrimitive(src.getValue());\r\n        }\r\n    }\r\n\r\n    @SuppressWarnings(\"unused\")\r\n    private static class Student {\r\n\r\n        Id<Student> id;\r\n\r\n        String name;\r\n\r\n        private Student() {\r\n            this(null, null);\r\n        }\r\n\r\n        public Student(Id<Student> id, String name) {\r\n            this.id = id;\r\n            this.name = name;\r\n        }\r\n    }\r\n\r\n    @SuppressWarnings(\"unused\")\r\n    private static class Course<T> {\r\n\r\n        final List<Student> students;\r\n\r\n        private final Id<Course<T>> courseId;\r\n\r\n        private final int numAssignments;\r\n\r\n        private final Assignment<T> assignment;\r\n\r\n        private Course() {\r\n            this(null, 0, null, new ArrayList<>());\r\n        }\r\n\r\n        public Course(Id<Course<T>> courseId, int numAssignments, Assignment<T> assignment, List<Student> players) {\r\n            this.courseId = courseId;\r\n            this.numAssignments = numAssignments;\r\n            this.assignment = assignment;\r\n            this.students = players;\r\n        }\r\n\r\n        public Id<Course<T>> getId() {\r\n            return courseId;\r\n        }\r\n\r\n        List<Student> getStudents() {\r\n            return students;\r\n        }\r\n    }\r\n\r\n    @SuppressWarnings(\"unused\")\r\n    private static class Assignment<T> {\r\n\r\n        private final Id<Assignment<T>> id;\r\n\r\n        private final T data;\r\n\r\n        private Assignment() {\r\n            this(null, null);\r\n        }\r\n\r\n        public Assignment(Id<Assignment<T>> id, T data) {\r\n            this.id = id;\r\n            this.data = data;\r\n        }\r\n    }\r\n\r\n    @SuppressWarnings(\"unused\")\r\n    private static class HistoryCourse {\r\n\r\n        int numClasses;\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "field",
    "name": "STUDENT1_ID",
    "start_line": 41,
    "end_line": 41,
    "code": "private static final Id<Student> STUDENT1_ID = new Id<>(\"5\", Student.class);",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "field",
    "name": "STUDENT2_ID",
    "start_line": 42,
    "end_line": 42,
    "code": "private static final Id<Student> STUDENT2_ID = new Id<>(\"6\", Student.class);",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "field",
    "name": "STUDENT1",
    "start_line": 43,
    "end_line": 43,
    "code": "private static final Student STUDENT1 = new Student(STUDENT1_ID, \"first\");",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "field",
    "name": "STUDENT2",
    "start_line": 44,
    "end_line": 44,
    "code": "private static final Student STUDENT2 = new Student(STUDENT2_ID, \"second\");",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "field",
    "name": "TYPE_COURSE_HISTORY",
    "start_line": 45,
    "end_line": 46,
    "code": "private static final Type TYPE_COURSE_HISTORY = new TypeToken<Course<HistoryCourse>>() {\r\n}.getType();",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "field",
    "name": "COURSE_ID",
    "start_line": 47,
    "end_line": 47,
    "code": "private static final Id<Course<HistoryCourse>> COURSE_ID = new Id<>(\"10\", TYPE_COURSE_HISTORY);",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "field",
    "name": "gson",
    "start_line": 49,
    "end_line": 49,
    "code": "private Gson gson;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "field",
    "name": "course",
    "start_line": 50,
    "end_line": 50,
    "code": "private Course<HistoryCourse> course;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "method",
    "name": "setUp",
    "start_line": 52,
    "end_line": 61,
    "code": "@Before\r\npublic void setUp() {\r\n    gson = new GsonBuilder().registerTypeAdapter(Id.class, new IdTreeTypeAdapter()).create();\r\n    course = new Course<>(COURSE_ID, 4, new Assignment<HistoryCourse>(null, null), Arrays.asList(STUDENT1, STUDENT2));\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "method",
    "name": "testSerializeId",
    "start_line": 63,
    "end_line": 69,
    "code": "@Test\r\npublic void testSerializeId() {\r\n    String json = gson.toJson(course, TYPE_COURSE_HISTORY);\r\n    assertThat(json).contains(String.valueOf(COURSE_ID.getValue()));\r\n    assertThat(json).contains(String.valueOf(STUDENT1_ID.getValue()));\r\n    assertThat(json).contains(String.valueOf(STUDENT2_ID.getValue()));\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  },
  {
    "type": "method",
    "name": "testDeserializeId",
    "start_line": 71,
    "end_line": 80,
    "code": "@Test\r\npublic void testDeserializeId() {\r\n    String json = \"{courseId:1,students:[{id:1,name:'first'},{id:6,name:'second'}],\" + \"numAssignments:4,assignment:{}}\";\r\n    Course<HistoryCourse> target = gson.fromJson(json, TYPE_COURSE_HISTORY);\r\n    assertThat(target.getStudents().get(0).id.getValue()).isEqualTo(\"1\");\r\n    assertThat(target.getStudents().get(1).id.getValue()).isEqualTo(\"6\");\r\n    assertThat(target.getId().getValue()).isEqualTo(\"1\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\TreeTypeAdaptersTest.java"
  }
]