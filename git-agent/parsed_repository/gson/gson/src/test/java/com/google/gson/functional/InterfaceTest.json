[
  {
    "type": "package",
    "name": "com.google.gson.functional",
    "start_line": 17,
    "end_line": 17,
    "code": "package com.google.gson.functional;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\InterfaceTest.java"
  },
  {
    "type": "import",
    "name": "com.google.common.truth.Truth.assertThat",
    "start_line": 19,
    "end_line": 19,
    "code": "import static com.google.common.truth.Truth.assertThat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\InterfaceTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.Gson",
    "start_line": 21,
    "end_line": 21,
    "code": "import com.google.gson.Gson;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\InterfaceTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Before",
    "start_line": 22,
    "end_line": 22,
    "code": "import org.junit.Before;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\InterfaceTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Test",
    "start_line": 23,
    "end_line": 23,
    "code": "import org.junit.Test;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\InterfaceTest.java"
  },
  {
    "type": "class",
    "name": "InterfaceTest",
    "start_line": 31,
    "end_line": 75,
    "code": "/**\r\n * Functional tests involving interfaces.\r\n *\r\n * @author Inderjeet Singh\r\n * @author Joel Leitch\r\n */\r\npublic class InterfaceTest {\r\n\r\n    private static final String OBJ_JSON = \"{\\\"someStringValue\\\":\\\"StringValue\\\"}\";\r\n\r\n    private Gson gson;\r\n\r\n    private TestObject obj;\r\n\r\n    @Before\r\n    public void setUp() throws Exception {\r\n        gson = new Gson();\r\n        obj = new TestObject(\"StringValue\");\r\n    }\r\n\r\n    @Test\r\n    public void testSerializingObjectImplementingInterface() {\r\n        assertThat(gson.toJson(obj)).isEqualTo(OBJ_JSON);\r\n    }\r\n\r\n    @Test\r\n    public void testSerializingInterfaceObjectField() {\r\n        TestObjectWrapper objWrapper = new TestObjectWrapper(obj);\r\n        assertThat(gson.toJson(objWrapper)).isEqualTo(\"{\\\"obj\\\":\" + OBJ_JSON + \"}\");\r\n    }\r\n\r\n    private static interface TestObjectInterface {\r\n        // Holder\r\n    }\r\n\r\n    private static class TestObject implements TestObjectInterface {\r\n\r\n        @SuppressWarnings(\"unused\")\r\n        private String someStringValue;\r\n\r\n        private TestObject(String value) {\r\n            this.someStringValue = value;\r\n        }\r\n    }\r\n\r\n    private static class TestObjectWrapper {\r\n\r\n        @SuppressWarnings(\"unused\")\r\n        private TestObjectInterface obj;\r\n\r\n        private TestObjectWrapper(TestObjectInterface obj) {\r\n            this.obj = obj;\r\n        }\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\InterfaceTest.java"
  },
  {
    "type": "field",
    "name": "OBJ_JSON",
    "start_line": 32,
    "end_line": 32,
    "code": "private static final String OBJ_JSON = \"{\\\"someStringValue\\\":\\\"StringValue\\\"}\";",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\InterfaceTest.java"
  },
  {
    "type": "field",
    "name": "gson",
    "start_line": 34,
    "end_line": 34,
    "code": "private Gson gson;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\InterfaceTest.java"
  },
  {
    "type": "field",
    "name": "obj",
    "start_line": 35,
    "end_line": 35,
    "code": "private TestObject obj;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\InterfaceTest.java"
  },
  {
    "type": "method",
    "name": "setUp",
    "start_line": 37,
    "end_line": 41,
    "code": "@Before\r\npublic void setUp() throws Exception {\r\n    gson = new Gson();\r\n    obj = new TestObject(\"StringValue\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\InterfaceTest.java"
  },
  {
    "type": "method",
    "name": "testSerializingObjectImplementingInterface",
    "start_line": 43,
    "end_line": 46,
    "code": "@Test\r\npublic void testSerializingObjectImplementingInterface() {\r\n    assertThat(gson.toJson(obj)).isEqualTo(OBJ_JSON);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\InterfaceTest.java"
  },
  {
    "type": "method",
    "name": "testSerializingInterfaceObjectField",
    "start_line": 48,
    "end_line": 52,
    "code": "@Test\r\npublic void testSerializingInterfaceObjectField() {\r\n    TestObjectWrapper objWrapper = new TestObjectWrapper(obj);\r\n    assertThat(gson.toJson(objWrapper)).isEqualTo(\"{\\\"obj\\\":\" + OBJ_JSON + \"}\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\InterfaceTest.java"
  }
]