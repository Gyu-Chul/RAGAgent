[
  {
    "type": "package",
    "name": "com.google.gson.functional",
    "start_line": 16,
    "end_line": 16,
    "code": "package com.google.gson.functional;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.common.truth.Truth.assertThat",
    "start_line": 18,
    "end_line": 18,
    "code": "import static com.google.common.truth.Truth.assertThat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.Gson",
    "start_line": 20,
    "end_line": 20,
    "code": "import com.google.gson.Gson;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.GsonBuilder",
    "start_line": 21,
    "end_line": 21,
    "code": "import com.google.gson.GsonBuilder;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.common.TestTypes.ArrayOfObjects",
    "start_line": 22,
    "end_line": 22,
    "code": "import com.google.gson.common.TestTypes.ArrayOfObjects;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.common.TestTypes.BagOfPrimitives",
    "start_line": 23,
    "end_line": 23,
    "code": "import com.google.gson.common.TestTypes.BagOfPrimitives;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.reflect.TypeToken",
    "start_line": 24,
    "end_line": 24,
    "code": "import com.google.gson.reflect.TypeToken;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "import",
    "name": "java.lang.reflect.Type",
    "start_line": 25,
    "end_line": 25,
    "code": "import java.lang.reflect.Type;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "import",
    "name": "java.util.ArrayList",
    "start_line": 26,
    "end_line": 26,
    "code": "import java.util.ArrayList;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "import",
    "name": "java.util.Arrays",
    "start_line": 27,
    "end_line": 27,
    "code": "import java.util.Arrays;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "import",
    "name": "java.util.LinkedHashMap",
    "start_line": 28,
    "end_line": 28,
    "code": "import java.util.LinkedHashMap;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "import",
    "name": "java.util.List",
    "start_line": 29,
    "end_line": 29,
    "code": "import java.util.List;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "import",
    "name": "java.util.Map",
    "start_line": 30,
    "end_line": 30,
    "code": "import java.util.Map;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Before",
    "start_line": 31,
    "end_line": 31,
    "code": "import org.junit.Before;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Test",
    "start_line": 32,
    "end_line": 32,
    "code": "import org.junit.Test;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "class",
    "name": "PrettyPrintingTest",
    "start_line": 40,
    "end_line": 170,
    "code": "/**\r\n * Functional tests for pretty printing option.\r\n *\r\n * @author Inderjeet Singh\r\n * @author Joel Leitch\r\n */\r\npublic class PrettyPrintingTest {\r\n\r\n    private Gson gson;\r\n\r\n    @Before\r\n    public void setUp() throws Exception {\r\n        gson = new GsonBuilder().setPrettyPrinting().create();\r\n    }\r\n\r\n    @Test\r\n    public void testPrettyPrintList() {\r\n        BagOfPrimitives b = new BagOfPrimitives();\r\n        List<BagOfPrimitives> listOfB = new ArrayList<>();\r\n        for (int i = 0; i < 3; ++i) {\r\n            listOfB.add(b);\r\n        }\r\n        Type typeOfSrc = new TypeToken<List<BagOfPrimitives>>() {\r\n        }.getType();\r\n        String json = gson.toJson(listOfB, typeOfSrc);\r\n        assertThat(json).isEqualTo(\"[\\n\" + \"  {\\n\" + \"    \\\"longValue\\\": 0,\\n\" + \"    \\\"intValue\\\": 0,\\n\" + \"    \\\"booleanValue\\\": false,\\n\" + \"    \\\"stringValue\\\": \\\"\\\"\\n\" + \"  },\\n\" + \"  {\\n\" + \"    \\\"longValue\\\": 0,\\n\" + \"    \\\"intValue\\\": 0,\\n\" + \"    \\\"booleanValue\\\": false,\\n\" + \"    \\\"stringValue\\\": \\\"\\\"\\n\" + \"  },\\n\" + \"  {\\n\" + \"    \\\"longValue\\\": 0,\\n\" + \"    \\\"intValue\\\": 0,\\n\" + \"    \\\"booleanValue\\\": false,\\n\" + \"    \\\"stringValue\\\": \\\"\\\"\\n\" + \"  }\\n\" + \"]\");\r\n    }\r\n\r\n    @Test\r\n    public void testPrettyPrintArrayOfObjects() {\r\n        ArrayOfObjects target = new ArrayOfObjects();\r\n        String json = gson.toJson(target);\r\n        assertThat(json).isEqualTo(\"{\\n\" + \"  \\\"elements\\\": [\\n\" + \"    {\\n\" + \"      \\\"longValue\\\": 0,\\n\" + \"      \\\"intValue\\\": 2,\\n\" + \"      \\\"booleanValue\\\": false,\\n\" + \"      \\\"stringValue\\\": \\\"i0\\\"\\n\" + \"    },\\n\" + \"    {\\n\" + \"      \\\"longValue\\\": 1,\\n\" + \"      \\\"intValue\\\": 3,\\n\" + \"      \\\"booleanValue\\\": false,\\n\" + \"      \\\"stringValue\\\": \\\"i1\\\"\\n\" + \"    },\\n\" + \"    {\\n\" + \"      \\\"longValue\\\": 2,\\n\" + \"      \\\"intValue\\\": 4,\\n\" + \"      \\\"booleanValue\\\": false,\\n\" + \"      \\\"stringValue\\\": \\\"i2\\\"\\n\" + \"    }\\n\" + \"  ]\\n\" + \"}\");\r\n    }\r\n\r\n    @Test\r\n    public void testPrettyPrintArrayOfPrimitives() {\r\n        int[] ints = { 1, 2, 3, 4, 5 };\r\n        String json = gson.toJson(ints);\r\n        assertThat(json).isEqualTo(\"[\\n  1,\\n  2,\\n  3,\\n  4,\\n  5\\n]\");\r\n    }\r\n\r\n    @Test\r\n    public void testPrettyPrintArrayOfPrimitiveArrays() {\r\n        int[][] ints = { { 1, 2 }, { 3, 4 }, { 5, 6 }, { 7, 8 }, { 9, 0 }, { 10 } };\r\n        String json = gson.toJson(ints);\r\n        assertThat(json).isEqualTo(\"[\\n  [\\n    1,\\n    2\\n  ],\\n  [\\n    3,\\n    4\\n  ],\\n  [\\n    5,\\n    6\\n  ],\" + \"\\n  [\\n    7,\\n    8\\n  ],\\n  [\\n    9,\\n    0\\n  ],\\n  [\\n    10\\n  ]\\n]\");\r\n    }\r\n\r\n    @Test\r\n    public void testPrettyPrintListOfPrimitiveArrays() {\r\n        List<Integer[]> list = Arrays.asList(new Integer[][] { { 1, 2 }, { 3, 4 }, { 5, 6 }, { 7, 8 }, { 9, 0 }, { 10 } });\r\n        String json = gson.toJson(list);\r\n        assertThat(json).isEqualTo(\"[\\n  [\\n    1,\\n    2\\n  ],\\n  [\\n    3,\\n    4\\n  ],\\n  [\\n    5,\\n    6\\n  ],\" + \"\\n  [\\n    7,\\n    8\\n  ],\\n  [\\n    9,\\n    0\\n  ],\\n  [\\n    10\\n  ]\\n]\");\r\n    }\r\n\r\n    @Test\r\n    public void testMap() {\r\n        Map<String, Integer> map = new LinkedHashMap<>();\r\n        map.put(\"abc\", 1);\r\n        map.put(\"def\", 5);\r\n        String json = gson.toJson(map);\r\n        assertThat(json).isEqualTo(\"{\\n  \\\"abc\\\": 1,\\n  \\\"def\\\": 5\\n}\");\r\n    }\r\n\r\n    // In response to bug 153\r\n    @Test\r\n    public void testEmptyMapField() {\r\n        ClassWithMap obj = new ClassWithMap();\r\n        obj.map = new LinkedHashMap<>();\r\n        String json = gson.toJson(obj);\r\n        assertThat(json).contains(\"{\\n  \\\"map\\\": {},\\n  \\\"value\\\": 2\\n}\");\r\n    }\r\n\r\n    @SuppressWarnings(\"unused\")\r\n    private static class ClassWithMap {\r\n\r\n        Map<String, Integer> map;\r\n\r\n        int value = 2;\r\n    }\r\n\r\n    @Test\r\n    public void testMultipleArrays() {\r\n        int[][][] ints = { { { 1 }, { 2 } } };\r\n        String json = gson.toJson(ints);\r\n        assertThat(json).isEqualTo(\"[\\n  [\\n    [\\n      1\\n    ],\\n    [\\n      2\\n    ]\\n  ]\\n]\");\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "field",
    "name": "gson",
    "start_line": 42,
    "end_line": 42,
    "code": "private Gson gson;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "method",
    "name": "setUp",
    "start_line": 44,
    "end_line": 47,
    "code": "@Before\r\npublic void setUp() throws Exception {\r\n    gson = new GsonBuilder().setPrettyPrinting().create();\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "method",
    "name": "testPrettyPrintList",
    "start_line": 49,
    "end_line": 80,
    "code": "@Test\r\npublic void testPrettyPrintList() {\r\n    BagOfPrimitives b = new BagOfPrimitives();\r\n    List<BagOfPrimitives> listOfB = new ArrayList<>();\r\n    for (int i = 0; i < 3; ++i) {\r\n        listOfB.add(b);\r\n    }\r\n    Type typeOfSrc = new TypeToken<List<BagOfPrimitives>>() {\r\n    }.getType();\r\n    String json = gson.toJson(listOfB, typeOfSrc);\r\n    assertThat(json).isEqualTo(\"[\\n\" + \"  {\\n\" + \"    \\\"longValue\\\": 0,\\n\" + \"    \\\"intValue\\\": 0,\\n\" + \"    \\\"booleanValue\\\": false,\\n\" + \"    \\\"stringValue\\\": \\\"\\\"\\n\" + \"  },\\n\" + \"  {\\n\" + \"    \\\"longValue\\\": 0,\\n\" + \"    \\\"intValue\\\": 0,\\n\" + \"    \\\"booleanValue\\\": false,\\n\" + \"    \\\"stringValue\\\": \\\"\\\"\\n\" + \"  },\\n\" + \"  {\\n\" + \"    \\\"longValue\\\": 0,\\n\" + \"    \\\"intValue\\\": 0,\\n\" + \"    \\\"booleanValue\\\": false,\\n\" + \"    \\\"stringValue\\\": \\\"\\\"\\n\" + \"  }\\n\" + \"]\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "method",
    "name": "testPrettyPrintArrayOfObjects",
    "start_line": 82,
    "end_line": 110,
    "code": "@Test\r\npublic void testPrettyPrintArrayOfObjects() {\r\n    ArrayOfObjects target = new ArrayOfObjects();\r\n    String json = gson.toJson(target);\r\n    assertThat(json).isEqualTo(\"{\\n\" + \"  \\\"elements\\\": [\\n\" + \"    {\\n\" + \"      \\\"longValue\\\": 0,\\n\" + \"      \\\"intValue\\\": 2,\\n\" + \"      \\\"booleanValue\\\": false,\\n\" + \"      \\\"stringValue\\\": \\\"i0\\\"\\n\" + \"    },\\n\" + \"    {\\n\" + \"      \\\"longValue\\\": 1,\\n\" + \"      \\\"intValue\\\": 3,\\n\" + \"      \\\"booleanValue\\\": false,\\n\" + \"      \\\"stringValue\\\": \\\"i1\\\"\\n\" + \"    },\\n\" + \"    {\\n\" + \"      \\\"longValue\\\": 2,\\n\" + \"      \\\"intValue\\\": 4,\\n\" + \"      \\\"booleanValue\\\": false,\\n\" + \"      \\\"stringValue\\\": \\\"i2\\\"\\n\" + \"    }\\n\" + \"  ]\\n\" + \"}\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "method",
    "name": "testPrettyPrintArrayOfPrimitives",
    "start_line": 112,
    "end_line": 117,
    "code": "@Test\r\npublic void testPrettyPrintArrayOfPrimitives() {\r\n    int[] ints = { 1, 2, 3, 4, 5 };\r\n    String json = gson.toJson(ints);\r\n    assertThat(json).isEqualTo(\"[\\n  1,\\n  2,\\n  3,\\n  4,\\n  5\\n]\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "method",
    "name": "testPrettyPrintArrayOfPrimitiveArrays",
    "start_line": 119,
    "end_line": 127,
    "code": "@Test\r\npublic void testPrettyPrintArrayOfPrimitiveArrays() {\r\n    int[][] ints = { { 1, 2 }, { 3, 4 }, { 5, 6 }, { 7, 8 }, { 9, 0 }, { 10 } };\r\n    String json = gson.toJson(ints);\r\n    assertThat(json).isEqualTo(\"[\\n  [\\n    1,\\n    2\\n  ],\\n  [\\n    3,\\n    4\\n  ],\\n  [\\n    5,\\n    6\\n  ],\" + \"\\n  [\\n    7,\\n    8\\n  ],\\n  [\\n    9,\\n    0\\n  ],\\n  [\\n    10\\n  ]\\n]\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "method",
    "name": "testPrettyPrintListOfPrimitiveArrays",
    "start_line": 129,
    "end_line": 138,
    "code": "@Test\r\npublic void testPrettyPrintListOfPrimitiveArrays() {\r\n    List<Integer[]> list = Arrays.asList(new Integer[][] { { 1, 2 }, { 3, 4 }, { 5, 6 }, { 7, 8 }, { 9, 0 }, { 10 } });\r\n    String json = gson.toJson(list);\r\n    assertThat(json).isEqualTo(\"[\\n  [\\n    1,\\n    2\\n  ],\\n  [\\n    3,\\n    4\\n  ],\\n  [\\n    5,\\n    6\\n  ],\" + \"\\n  [\\n    7,\\n    8\\n  ],\\n  [\\n    9,\\n    0\\n  ],\\n  [\\n    10\\n  ]\\n]\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "method",
    "name": "testMap",
    "start_line": 140,
    "end_line": 147,
    "code": "@Test\r\npublic void testMap() {\r\n    Map<String, Integer> map = new LinkedHashMap<>();\r\n    map.put(\"abc\", 1);\r\n    map.put(\"def\", 5);\r\n    String json = gson.toJson(map);\r\n    assertThat(json).isEqualTo(\"{\\n  \\\"abc\\\": 1,\\n  \\\"def\\\": 5\\n}\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "method",
    "name": "testEmptyMapField",
    "start_line": 150,
    "end_line": 156,
    "code": "// In response to bug 153\r\n@Test\r\npublic void testEmptyMapField() {\r\n    ClassWithMap obj = new ClassWithMap();\r\n    obj.map = new LinkedHashMap<>();\r\n    String json = gson.toJson(obj);\r\n    assertThat(json).contains(\"{\\n  \\\"map\\\": {},\\n  \\\"value\\\": 2\\n}\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  },
  {
    "type": "method",
    "name": "testMultipleArrays",
    "start_line": 164,
    "end_line": 169,
    "code": "@Test\r\npublic void testMultipleArrays() {\r\n    int[][][] ints = { { { 1 }, { 2 } } };\r\n    String json = gson.toJson(ints);\r\n    assertThat(json).isEqualTo(\"[\\n  [\\n    [\\n      1\\n    ],\\n    [\\n      2\\n    ]\\n  ]\\n]\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\PrettyPrintingTest.java"
  }
]