[
  {
    "type": "package",
    "name": "com.google.gson",
    "start_line": 17,
    "end_line": 17,
    "code": "package com.google.gson;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "import",
    "name": "com.google.common.truth.Truth.assertThat",
    "start_line": 19,
    "end_line": 19,
    "code": "import static com.google.common.truth.Truth.assertThat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.annotations.Expose",
    "start_line": 21,
    "end_line": 21,
    "code": "import com.google.gson.annotations.Expose;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.internal.Excluder",
    "start_line": 22,
    "end_line": 22,
    "code": "import com.google.gson.internal.Excluder;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "import",
    "name": "java.lang.reflect.Field",
    "start_line": 23,
    "end_line": 23,
    "code": "import java.lang.reflect.Field;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Test",
    "start_line": 24,
    "end_line": 24,
    "code": "import org.junit.Test;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "class",
    "name": "ExposeAnnotationExclusionStrategyTest",
    "start_line": 31,
    "end_line": 104,
    "code": "/**\r\n * Unit tests for GsonBuilder.REQUIRE_EXPOSE_DESERIALIZE.\r\n *\r\n * @author Joel Leitch\r\n */\r\npublic class ExposeAnnotationExclusionStrategyTest {\r\n\r\n    private Excluder excluder = Excluder.DEFAULT.excludeFieldsWithoutExposeAnnotation();\r\n\r\n    private void assertIncludesClass(Class<?> c) {\r\n        assertThat(excluder.excludeClass(c, true)).isFalse();\r\n        assertThat(excluder.excludeClass(c, false)).isFalse();\r\n    }\r\n\r\n    private void assertIncludesField(Field f) {\r\n        assertThat(excluder.excludeField(f, true)).isFalse();\r\n        assertThat(excluder.excludeField(f, false)).isFalse();\r\n    }\r\n\r\n    private void assertExcludesField(Field f) {\r\n        assertThat(excluder.excludeField(f, true)).isTrue();\r\n        assertThat(excluder.excludeField(f, false)).isTrue();\r\n    }\r\n\r\n    @Test\r\n    public void testNeverSkipClasses() {\r\n        assertIncludesClass(MockObject.class);\r\n    }\r\n\r\n    @Test\r\n    public void testSkipNonAnnotatedFields() throws Exception {\r\n        Field f = createFieldAttributes(\"hiddenField\");\r\n        assertExcludesField(f);\r\n    }\r\n\r\n    @Test\r\n    public void testSkipExplicitlySkippedFields() throws Exception {\r\n        Field f = createFieldAttributes(\"explicitlyHiddenField\");\r\n        assertExcludesField(f);\r\n    }\r\n\r\n    @Test\r\n    public void testNeverSkipExposedAnnotatedFields() throws Exception {\r\n        Field f = createFieldAttributes(\"exposedField\");\r\n        assertIncludesField(f);\r\n    }\r\n\r\n    @Test\r\n    public void testNeverSkipExplicitlyExposedAnnotatedFields() throws Exception {\r\n        Field f = createFieldAttributes(\"explicitlyExposedField\");\r\n        assertIncludesField(f);\r\n    }\r\n\r\n    @Test\r\n    public void testDifferentSerializeAndDeserializeField() throws Exception {\r\n        Field f = createFieldAttributes(\"explicitlyDifferentModeField\");\r\n        assertThat(excluder.excludeField(f, true)).isFalse();\r\n        assertThat(excluder.excludeField(f, false)).isTrue();\r\n    }\r\n\r\n    private static Field createFieldAttributes(String fieldName) throws Exception {\r\n        return MockObject.class.getField(fieldName);\r\n    }\r\n\r\n    @SuppressWarnings(\"unused\")\r\n    private static class MockObject {\r\n\r\n        @Expose\r\n        public final int exposedField = 0;\r\n\r\n        @Expose(serialize = true, deserialize = true)\r\n        public final int explicitlyExposedField = 0;\r\n\r\n        @Expose(serialize = false, deserialize = false)\r\n        public final int explicitlyHiddenField = 0;\r\n\r\n        @Expose(serialize = true, deserialize = false)\r\n        public final int explicitlyDifferentModeField = 0;\r\n\r\n        public final int hiddenField = 0;\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "field",
    "name": "excluder",
    "start_line": 32,
    "end_line": 32,
    "code": "private Excluder excluder = Excluder.DEFAULT.excludeFieldsWithoutExposeAnnotation();",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "method",
    "name": "assertIncludesClass",
    "start_line": 34,
    "end_line": 37,
    "code": "private void assertIncludesClass(Class<?> c) {\r\n    assertThat(excluder.excludeClass(c, true)).isFalse();\r\n    assertThat(excluder.excludeClass(c, false)).isFalse();\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "method",
    "name": "assertIncludesField",
    "start_line": 39,
    "end_line": 42,
    "code": "private void assertIncludesField(Field f) {\r\n    assertThat(excluder.excludeField(f, true)).isFalse();\r\n    assertThat(excluder.excludeField(f, false)).isFalse();\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "method",
    "name": "assertExcludesField",
    "start_line": 44,
    "end_line": 47,
    "code": "private void assertExcludesField(Field f) {\r\n    assertThat(excluder.excludeField(f, true)).isTrue();\r\n    assertThat(excluder.excludeField(f, false)).isTrue();\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "method",
    "name": "testNeverSkipClasses",
    "start_line": 49,
    "end_line": 52,
    "code": "@Test\r\npublic void testNeverSkipClasses() {\r\n    assertIncludesClass(MockObject.class);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "method",
    "name": "testSkipNonAnnotatedFields",
    "start_line": 54,
    "end_line": 58,
    "code": "@Test\r\npublic void testSkipNonAnnotatedFields() throws Exception {\r\n    Field f = createFieldAttributes(\"hiddenField\");\r\n    assertExcludesField(f);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "method",
    "name": "testSkipExplicitlySkippedFields",
    "start_line": 60,
    "end_line": 64,
    "code": "@Test\r\npublic void testSkipExplicitlySkippedFields() throws Exception {\r\n    Field f = createFieldAttributes(\"explicitlyHiddenField\");\r\n    assertExcludesField(f);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "method",
    "name": "testNeverSkipExposedAnnotatedFields",
    "start_line": 66,
    "end_line": 70,
    "code": "@Test\r\npublic void testNeverSkipExposedAnnotatedFields() throws Exception {\r\n    Field f = createFieldAttributes(\"exposedField\");\r\n    assertIncludesField(f);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "method",
    "name": "testNeverSkipExplicitlyExposedAnnotatedFields",
    "start_line": 72,
    "end_line": 76,
    "code": "@Test\r\npublic void testNeverSkipExplicitlyExposedAnnotatedFields() throws Exception {\r\n    Field f = createFieldAttributes(\"explicitlyExposedField\");\r\n    assertIncludesField(f);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "method",
    "name": "testDifferentSerializeAndDeserializeField",
    "start_line": 78,
    "end_line": 83,
    "code": "@Test\r\npublic void testDifferentSerializeAndDeserializeField() throws Exception {\r\n    Field f = createFieldAttributes(\"explicitlyDifferentModeField\");\r\n    assertThat(excluder.excludeField(f, true)).isFalse();\r\n    assertThat(excluder.excludeField(f, false)).isTrue();\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  },
  {
    "type": "method",
    "name": "createFieldAttributes",
    "start_line": 85,
    "end_line": 87,
    "code": "private static Field createFieldAttributes(String fieldName) throws Exception {\r\n    return MockObject.class.getField(fieldName);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\ExposeAnnotationExclusionStrategyTest.java"
  }
]