[
  {
    "type": "package",
    "name": "com.google.gson.internal",
    "start_line": 16,
    "end_line": 16,
    "code": "package com.google.gson.internal;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\internal\\JavaVersionTest.java"
  },
  {
    "type": "import",
    "name": "com.google.common.truth.Truth.assertThat",
    "start_line": 18,
    "end_line": 18,
    "code": "import static com.google.common.truth.Truth.assertThat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\internal\\JavaVersionTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Test",
    "start_line": 20,
    "end_line": 20,
    "code": "import org.junit.Test;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\internal\\JavaVersionTest.java"
  },
  {
    "type": "class",
    "name": "JavaVersionTest",
    "start_line": 27,
    "end_line": 85,
    "code": "/**\r\n * Unit and functional tests for {@link JavaVersion}\r\n *\r\n * @author Inderjeet Singh\r\n */\r\npublic class JavaVersionTest {\r\n\r\n    // Borrowed some of test strings from\r\n    // https://github.com/prestodb/presto/blob/master/presto-main/src/test/java/com/facebook/presto/server/TestJavaVersion.java\r\n    @Test\r\n    public void testGetMajorJavaVersion() {\r\n        // Gson currently requires at least Java 8\r\n        assertThat(JavaVersion.getMajorJavaVersion()).isAtLeast(8);\r\n    }\r\n\r\n    @Test\r\n    public void testJava6() {\r\n        // http://www.oracle.com/technetwork/java/javase/version-6-141920.html\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"1.6.0\")).isEqualTo(6);\r\n    }\r\n\r\n    @Test\r\n    public void testJava7() {\r\n        // http://www.oracle.com/technetwork/java/javase/jdk7-naming-418744.html\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"1.7.0\")).isEqualTo(7);\r\n    }\r\n\r\n    @Test\r\n    public void testJava8() {\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"1.8\")).isEqualTo(8);\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"1.8.0\")).isEqualTo(8);\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"1.8.0_131\")).isEqualTo(8);\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"1.8.0_60-ea\")).isEqualTo(8);\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"1.8.0_111-internal\")).isEqualTo(8);\r\n        // openjdk8 per https://github.com/AdoptOpenJDK/openjdk-build/issues/93\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"1.8.0-internal\")).isEqualTo(8);\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"1.8.0_131-adoptopenjdk\")).isEqualTo(8);\r\n    }\r\n\r\n    @Test\r\n    public void testJava9() {\r\n        // Legacy style\r\n        // Oracle JDK 9\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"9.0.4\")).isEqualTo(9);\r\n        // Debian as reported in https://github.com/google/gson/issues/1310\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"9-Debian\")).isEqualTo(9);\r\n        // New style\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"9-ea+19\")).isEqualTo(9);\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"9+100\")).isEqualTo(9);\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"9.0.1+20\")).isEqualTo(9);\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"9.1.1+20\")).isEqualTo(9);\r\n    }\r\n\r\n    @Test\r\n    public void testJava10() {\r\n        // Oracle JDK 10.0.1\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"10.0.1\")).isEqualTo(10);\r\n    }\r\n\r\n    @Test\r\n    public void testUnknownVersionFormat() {\r\n        // unknown format\r\n        assertThat(JavaVersion.parseMajorJavaVersion(\"Java9\")).isEqualTo(6);\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\internal\\JavaVersionTest.java"
  },
  {
    "type": "method",
    "name": "testGetMajorJavaVersion",
    "start_line": 31,
    "end_line": 35,
    "code": "// Borrowed some of test strings from\r\n// https://github.com/prestodb/presto/blob/master/presto-main/src/test/java/com/facebook/presto/server/TestJavaVersion.java\r\n@Test\r\npublic void testGetMajorJavaVersion() {\r\n    // Gson currently requires at least Java 8\r\n    assertThat(JavaVersion.getMajorJavaVersion()).isAtLeast(8);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\internal\\JavaVersionTest.java"
  },
  {
    "type": "method",
    "name": "testJava6",
    "start_line": 37,
    "end_line": 41,
    "code": "@Test\r\npublic void testJava6() {\r\n    // http://www.oracle.com/technetwork/java/javase/version-6-141920.html\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"1.6.0\")).isEqualTo(6);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\internal\\JavaVersionTest.java"
  },
  {
    "type": "method",
    "name": "testJava7",
    "start_line": 43,
    "end_line": 47,
    "code": "@Test\r\npublic void testJava7() {\r\n    // http://www.oracle.com/technetwork/java/javase/jdk7-naming-418744.html\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"1.7.0\")).isEqualTo(7);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\internal\\JavaVersionTest.java"
  },
  {
    "type": "method",
    "name": "testJava8",
    "start_line": 49,
    "end_line": 60,
    "code": "@Test\r\npublic void testJava8() {\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"1.8\")).isEqualTo(8);\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"1.8.0\")).isEqualTo(8);\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"1.8.0_131\")).isEqualTo(8);\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"1.8.0_60-ea\")).isEqualTo(8);\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"1.8.0_111-internal\")).isEqualTo(8);\r\n    // openjdk8 per https://github.com/AdoptOpenJDK/openjdk-build/issues/93\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"1.8.0-internal\")).isEqualTo(8);\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"1.8.0_131-adoptopenjdk\")).isEqualTo(8);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\internal\\JavaVersionTest.java"
  },
  {
    "type": "method",
    "name": "testJava9",
    "start_line": 62,
    "end_line": 74,
    "code": "@Test\r\npublic void testJava9() {\r\n    // Legacy style\r\n    // Oracle JDK 9\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"9.0.4\")).isEqualTo(9);\r\n    // Debian as reported in https://github.com/google/gson/issues/1310\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"9-Debian\")).isEqualTo(9);\r\n    // New style\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"9-ea+19\")).isEqualTo(9);\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"9+100\")).isEqualTo(9);\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"9.0.1+20\")).isEqualTo(9);\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"9.1.1+20\")).isEqualTo(9);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\internal\\JavaVersionTest.java"
  },
  {
    "type": "method",
    "name": "testJava10",
    "start_line": 76,
    "end_line": 79,
    "code": "@Test\r\npublic void testJava10() {\r\n    // Oracle JDK 10.0.1\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"10.0.1\")).isEqualTo(10);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\internal\\JavaVersionTest.java"
  },
  {
    "type": "method",
    "name": "testUnknownVersionFormat",
    "start_line": 81,
    "end_line": 84,
    "code": "@Test\r\npublic void testUnknownVersionFormat() {\r\n    // unknown format\r\n    assertThat(JavaVersion.parseMajorJavaVersion(\"Java9\")).isEqualTo(6);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\internal\\JavaVersionTest.java"
  }
]