[
  {
    "type": "package",
    "name": "com.google.gson.functional",
    "start_line": 17,
    "end_line": 17,
    "code": "package com.google.gson.functional;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\EnumWithObfuscatedTest.java"
  },
  {
    "type": "import",
    "name": "com.google.common.truth.Truth.assertThat",
    "start_line": 19,
    "end_line": 19,
    "code": "import static com.google.common.truth.Truth.assertThat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\EnumWithObfuscatedTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Assert.assertThrows",
    "start_line": 20,
    "end_line": 20,
    "code": "import static org.junit.Assert.assertThrows;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\EnumWithObfuscatedTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.Gson",
    "start_line": 22,
    "end_line": 22,
    "code": "import com.google.gson.Gson;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\EnumWithObfuscatedTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.annotations.SerializedName",
    "start_line": 23,
    "end_line": 23,
    "code": "import com.google.gson.annotations.SerializedName;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\EnumWithObfuscatedTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Before",
    "start_line": 24,
    "end_line": 24,
    "code": "import org.junit.Before;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\EnumWithObfuscatedTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Test",
    "start_line": 25,
    "end_line": 25,
    "code": "import org.junit.Test;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\EnumWithObfuscatedTest.java"
  },
  {
    "type": "class",
    "name": "EnumWithObfuscatedTest",
    "start_line": 32,
    "end_line": 60,
    "code": "/**\r\n * Functional tests for enums with Proguard.\r\n *\r\n * @author Young Cha\r\n */\r\npublic class EnumWithObfuscatedTest {\r\n\r\n    private Gson gson;\r\n\r\n    @Before\r\n    public void setUp() throws Exception {\r\n        gson = new Gson();\r\n    }\r\n\r\n    public enum Gender {\r\n\r\n        @SerializedName(\"MAIL\")\r\n        MALE, @SerializedName(\"FEMAIL\")\r\n        FEMALE\r\n    }\r\n\r\n    @Test\r\n    public void testEnumClassWithObfuscated() {\r\n        for (Gender enumConstant : Gender.class.getEnumConstants()) {\r\n            assertThrows(\"Enum is not obfuscated\", NoSuchFieldException.class, () -> Gender.class.getField(enumConstant.name()));\r\n        }\r\n        assertThat(gson.fromJson(\"\\\"MAIL\\\"\", Gender.class)).isEqualTo(Gender.MALE);\r\n        assertThat(gson.toJson(Gender.MALE, Gender.class)).isEqualTo(\"\\\"MAIL\\\"\");\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\EnumWithObfuscatedTest.java"
  },
  {
    "type": "field",
    "name": "gson",
    "start_line": 33,
    "end_line": 33,
    "code": "private Gson gson;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\EnumWithObfuscatedTest.java"
  },
  {
    "type": "method",
    "name": "setUp",
    "start_line": 35,
    "end_line": 38,
    "code": "@Before\r\npublic void setUp() throws Exception {\r\n    gson = new Gson();\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\EnumWithObfuscatedTest.java"
  },
  {
    "type": "method",
    "name": "testEnumClassWithObfuscated",
    "start_line": 48,
    "end_line": 59,
    "code": "@Test\r\npublic void testEnumClassWithObfuscated() {\r\n    for (Gender enumConstant : Gender.class.getEnumConstants()) {\r\n        assertThrows(\"Enum is not obfuscated\", NoSuchFieldException.class, () -> Gender.class.getField(enumConstant.name()));\r\n    }\r\n    assertThat(gson.fromJson(\"\\\"MAIL\\\"\", Gender.class)).isEqualTo(Gender.MALE);\r\n    assertThat(gson.toJson(Gender.MALE, Gender.class)).isEqualTo(\"\\\"MAIL\\\"\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\gson\\src\\test\\java\\com\\google\\gson\\functional\\EnumWithObfuscatedTest.java"
  }
]