[
  {
    "type": "package",
    "name": "com.google.gson.jpms_test.opened",
    "start_line": 18,
    "end_line": 18,
    "code": "// This package is opened for reflection, see `module-info.java`\r\npackage com.google.gson.jpms_test.opened;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\test-jpms\\src\\test\\java\\com\\google\\gson\\jpms_test\\opened\\ReflectionTest.java"
  },
  {
    "type": "import",
    "name": "com.google.common.truth.Truth.assertThat",
    "start_line": 20,
    "end_line": 20,
    "code": "import static com.google.common.truth.Truth.assertThat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\test-jpms\\src\\test\\java\\com\\google\\gson\\jpms_test\\opened\\ReflectionTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.Gson",
    "start_line": 22,
    "end_line": 22,
    "code": "import com.google.gson.Gson;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\test-jpms\\src\\test\\java\\com\\google\\gson\\jpms_test\\opened\\ReflectionTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Test",
    "start_line": 23,
    "end_line": 23,
    "code": "import org.junit.Test;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\test-jpms\\src\\test\\java\\com\\google\\gson\\jpms_test\\opened\\ReflectionTest.java"
  },
  {
    "type": "class",
    "name": "ReflectionTest",
    "start_line": 29,
    "end_line": 50,
    "code": "/**\r\n * Verifies that Gson can use reflection for classes in a package if it has been 'opened' to the\r\n * Gson module in the {@code module-info.java} of the project.\r\n */\r\npublic class ReflectionTest {\r\n\r\n    private static class MyClass {\r\n\r\n        int i;\r\n    }\r\n\r\n    @Test\r\n    public void testDeserialization() {\r\n        Gson gson = new Gson();\r\n        MyClass deserialized = gson.fromJson(\"{\\\"i\\\":1}\", MyClass.class);\r\n        assertThat(deserialized.i).isEqualTo(1);\r\n    }\r\n\r\n    @Test\r\n    public void testSerialization() {\r\n        Gson gson = new Gson();\r\n        MyClass obj = new MyClass();\r\n        obj.i = 1;\r\n        String serialized = gson.toJson(obj);\r\n        assertThat(serialized).isEqualTo(\"{\\\"i\\\":1}\");\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\test-jpms\\src\\test\\java\\com\\google\\gson\\jpms_test\\opened\\ReflectionTest.java"
  },
  {
    "type": "method",
    "name": "testDeserialization",
    "start_line": 34,
    "end_line": 39,
    "code": "@Test\r\npublic void testDeserialization() {\r\n    Gson gson = new Gson();\r\n    MyClass deserialized = gson.fromJson(\"{\\\"i\\\":1}\", MyClass.class);\r\n    assertThat(deserialized.i).isEqualTo(1);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\test-jpms\\src\\test\\java\\com\\google\\gson\\jpms_test\\opened\\ReflectionTest.java"
  },
  {
    "type": "method",
    "name": "testSerialization",
    "start_line": 41,
    "end_line": 49,
    "code": "@Test\r\npublic void testSerialization() {\r\n    Gson gson = new Gson();\r\n    MyClass obj = new MyClass();\r\n    obj.i = 1;\r\n    String serialized = gson.toJson(obj);\r\n    assertThat(serialized).isEqualTo(\"{\\\"i\\\":1}\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\test-jpms\\src\\test\\java\\com\\google\\gson\\jpms_test\\opened\\ReflectionTest.java"
  }
]