[
  {
    "type": "package",
    "name": "com.google.gson.protobuf.functional",
    "start_line": 16,
    "end_line": 16,
    "code": "package com.google.gson.protobuf.functional;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "import",
    "name": "com.google.common.truth.Truth.assertThat",
    "start_line": 18,
    "end_line": 18,
    "code": "import static com.google.common.truth.Truth.assertThat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "import",
    "name": "com.google.common.base.CaseFormat",
    "start_line": 20,
    "end_line": 20,
    "code": "import com.google.common.base.CaseFormat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.Gson",
    "start_line": 21,
    "end_line": 21,
    "code": "import com.google.gson.Gson;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.GsonBuilder",
    "start_line": 22,
    "end_line": 22,
    "code": "import com.google.gson.GsonBuilder;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.JsonObject",
    "start_line": 23,
    "end_line": 23,
    "code": "import com.google.gson.JsonObject;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.protobuf.ProtoTypeAdapter",
    "start_line": 24,
    "end_line": 24,
    "code": "import com.google.gson.protobuf.ProtoTypeAdapter;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.protobuf.ProtoTypeAdapter.EnumSerialization",
    "start_line": 25,
    "end_line": 25,
    "code": "import com.google.gson.protobuf.ProtoTypeAdapter.EnumSerialization;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.protobuf.generated.Bag.ProtoWithDifferentCaseFormat",
    "start_line": 26,
    "end_line": 26,
    "code": "import com.google.gson.protobuf.generated.Bag.ProtoWithDifferentCaseFormat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.protobuf.generated.Bag.ProtoWithRepeatedFields",
    "start_line": 27,
    "end_line": 27,
    "code": "import com.google.gson.protobuf.generated.Bag.ProtoWithRepeatedFields;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.protobuf.generated.Bag.SimpleProto",
    "start_line": 28,
    "end_line": 28,
    "code": "import com.google.gson.protobuf.generated.Bag.SimpleProto;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "import",
    "name": "com.google.protobuf.GeneratedMessage",
    "start_line": 29,
    "end_line": 29,
    "code": "import com.google.protobuf.GeneratedMessage;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Before",
    "start_line": 30,
    "end_line": 30,
    "code": "import org.junit.Before;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Test",
    "start_line": 31,
    "end_line": 31,
    "code": "import org.junit.Test;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "class",
    "name": "ProtosWithComplexAndRepeatedFieldsTest",
    "start_line": 38,
    "end_line": 107,
    "code": "/**\r\n * Functional tests for protocol buffers using complex and repeated fields\r\n *\r\n * @author Inderjeet Singh\r\n */\r\npublic class ProtosWithComplexAndRepeatedFieldsTest {\r\n\r\n    private Gson gson;\r\n\r\n    private Gson upperCamelGson;\r\n\r\n    @Before\r\n    public void setUp() throws Exception {\r\n        gson = new GsonBuilder().registerTypeHierarchyAdapter(GeneratedMessage.class, ProtoTypeAdapter.newBuilder().setEnumSerialization(EnumSerialization.NUMBER).build()).create();\r\n        upperCamelGson = new GsonBuilder().registerTypeHierarchyAdapter(GeneratedMessage.class, ProtoTypeAdapter.newBuilder().setFieldNameSerializationFormat(CaseFormat.LOWER_UNDERSCORE, CaseFormat.UPPER_CAMEL).build()).create();\r\n    }\r\n\r\n    @Test\r\n    public void testSerializeRepeatedFields() {\r\n        ProtoWithRepeatedFields proto = ProtoWithRepeatedFields.newBuilder().addNumbers(2).addNumbers(3).addSimples(SimpleProto.newBuilder().setMsg(\"foo\").build()).addSimples(SimpleProto.newBuilder().setCount(3).build()).build();\r\n        String json = gson.toJson(proto);\r\n        assertThat(json).isEqualTo(\"{\\\"numbers\\\":[2,3],\\\"simples\\\":[{\\\"msg\\\":\\\"foo\\\"},{\\\"count\\\":3}]}\");\r\n    }\r\n\r\n    @Test\r\n    public void testDeserializeRepeatedFieldsProto() {\r\n        String json = \"{numbers:[4,6],simples:[{msg:'bar'},{count:7}]}\";\r\n        ProtoWithRepeatedFields proto = gson.fromJson(json, ProtoWithRepeatedFields.class);\r\n        assertThat(proto.getNumbers(0)).isEqualTo(4);\r\n        assertThat(proto.getNumbers(1)).isEqualTo(6);\r\n        assertThat(proto.getSimples(0).getMsg()).isEqualTo(\"bar\");\r\n        assertThat(proto.getSimples(1).getCount()).isEqualTo(7);\r\n    }\r\n\r\n    @Test\r\n    public void testSerializeDifferentCaseFormat() {\r\n        ProtoWithDifferentCaseFormat proto = ProtoWithDifferentCaseFormat.newBuilder().setAnotherField(\"foo\").addNameThatTestsCaseFormat(\"bar\").build();\r\n        JsonObject json = upperCamelGson.toJsonTree(proto).getAsJsonObject();\r\n        assertThat(json.get(\"AnotherField\").getAsString()).isEqualTo(\"foo\");\r\n        assertThat(json.get(\"NameThatTestsCaseFormat\").getAsJsonArray().get(0).getAsString()).isEqualTo(\"bar\");\r\n    }\r\n\r\n    @Test\r\n    public void testDeserializeDifferentCaseFormat() {\r\n        String json = \"{NameThatTestsCaseFormat:['bar'],AnotherField:'foo'}\";\r\n        ProtoWithDifferentCaseFormat proto = upperCamelGson.fromJson(json, ProtoWithDifferentCaseFormat.class);\r\n        assertThat(proto.getAnotherField()).isEqualTo(\"foo\");\r\n        assertThat(proto.getNameThatTestsCaseFormat(0)).isEqualTo(\"bar\");\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "field",
    "name": "gson",
    "start_line": 39,
    "end_line": 39,
    "code": "private Gson gson;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "field",
    "name": "upperCamelGson",
    "start_line": 40,
    "end_line": 40,
    "code": "private Gson upperCamelGson;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "method",
    "name": "setUp",
    "start_line": 42,
    "end_line": 61,
    "code": "@Before\r\npublic void setUp() throws Exception {\r\n    gson = new GsonBuilder().registerTypeHierarchyAdapter(GeneratedMessage.class, ProtoTypeAdapter.newBuilder().setEnumSerialization(EnumSerialization.NUMBER).build()).create();\r\n    upperCamelGson = new GsonBuilder().registerTypeHierarchyAdapter(GeneratedMessage.class, ProtoTypeAdapter.newBuilder().setFieldNameSerializationFormat(CaseFormat.LOWER_UNDERSCORE, CaseFormat.UPPER_CAMEL).build()).create();\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "method",
    "name": "testSerializeRepeatedFields",
    "start_line": 63,
    "end_line": 74,
    "code": "@Test\r\npublic void testSerializeRepeatedFields() {\r\n    ProtoWithRepeatedFields proto = ProtoWithRepeatedFields.newBuilder().addNumbers(2).addNumbers(3).addSimples(SimpleProto.newBuilder().setMsg(\"foo\").build()).addSimples(SimpleProto.newBuilder().setCount(3).build()).build();\r\n    String json = gson.toJson(proto);\r\n    assertThat(json).isEqualTo(\"{\\\"numbers\\\":[2,3],\\\"simples\\\":[{\\\"msg\\\":\\\"foo\\\"},{\\\"count\\\":3}]}\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "method",
    "name": "testDeserializeRepeatedFieldsProto",
    "start_line": 76,
    "end_line": 84,
    "code": "@Test\r\npublic void testDeserializeRepeatedFieldsProto() {\r\n    String json = \"{numbers:[4,6],simples:[{msg:'bar'},{count:7}]}\";\r\n    ProtoWithRepeatedFields proto = gson.fromJson(json, ProtoWithRepeatedFields.class);\r\n    assertThat(proto.getNumbers(0)).isEqualTo(4);\r\n    assertThat(proto.getNumbers(1)).isEqualTo(6);\r\n    assertThat(proto.getSimples(0).getMsg()).isEqualTo(\"bar\");\r\n    assertThat(proto.getSimples(1).getCount()).isEqualTo(7);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "method",
    "name": "testSerializeDifferentCaseFormat",
    "start_line": 86,
    "end_line": 97,
    "code": "@Test\r\npublic void testSerializeDifferentCaseFormat() {\r\n    ProtoWithDifferentCaseFormat proto = ProtoWithDifferentCaseFormat.newBuilder().setAnotherField(\"foo\").addNameThatTestsCaseFormat(\"bar\").build();\r\n    JsonObject json = upperCamelGson.toJsonTree(proto).getAsJsonObject();\r\n    assertThat(json.get(\"AnotherField\").getAsString()).isEqualTo(\"foo\");\r\n    assertThat(json.get(\"NameThatTestsCaseFormat\").getAsJsonArray().get(0).getAsString()).isEqualTo(\"bar\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  },
  {
    "type": "method",
    "name": "testDeserializeDifferentCaseFormat",
    "start_line": 99,
    "end_line": 106,
    "code": "@Test\r\npublic void testDeserializeDifferentCaseFormat() {\r\n    String json = \"{NameThatTestsCaseFormat:['bar'],AnotherField:'foo'}\";\r\n    ProtoWithDifferentCaseFormat proto = upperCamelGson.fromJson(json, ProtoWithDifferentCaseFormat.class);\r\n    assertThat(proto.getAnotherField()).isEqualTo(\"foo\");\r\n    assertThat(proto.getNameThatTestsCaseFormat(0)).isEqualTo(\"bar\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\proto\\src\\test\\java\\com\\google\\gson\\protobuf\\functional\\ProtosWithComplexAndRepeatedFieldsTest.java"
  }
]