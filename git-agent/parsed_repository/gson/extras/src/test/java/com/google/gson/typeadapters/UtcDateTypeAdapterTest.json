[
  {
    "type": "package",
    "name": "com.google.gson.typeadapters",
    "start_line": 17,
    "end_line": 17,
    "code": "package com.google.gson.typeadapters;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "com.google.common.truth.Truth.assertThat",
    "start_line": 19,
    "end_line": 19,
    "code": "import static com.google.common.truth.Truth.assertThat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Assert.assertThrows",
    "start_line": 20,
    "end_line": 20,
    "code": "import static org.junit.Assert.assertThrows;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.Gson",
    "start_line": 22,
    "end_line": 22,
    "code": "import com.google.gson.Gson;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.GsonBuilder",
    "start_line": 23,
    "end_line": 23,
    "code": "import com.google.gson.GsonBuilder;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.JsonParseException",
    "start_line": 24,
    "end_line": 24,
    "code": "import com.google.gson.JsonParseException;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "java.text.SimpleDateFormat",
    "start_line": 25,
    "end_line": 25,
    "code": "import java.text.SimpleDateFormat;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "java.util.Calendar",
    "start_line": 26,
    "end_line": 26,
    "code": "import java.util.Calendar;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "java.util.Date",
    "start_line": 27,
    "end_line": 27,
    "code": "import java.util.Date;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "java.util.Locale",
    "start_line": 28,
    "end_line": 28,
    "code": "import java.util.Locale;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "java.util.TimeZone",
    "start_line": 29,
    "end_line": 29,
    "code": "import java.util.TimeZone;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "import",
    "name": "org.junit.Test",
    "start_line": 30,
    "end_line": 30,
    "code": "import org.junit.Test;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "class",
    "name": "UtcDateTypeAdapterTest",
    "start_line": 32,
    "end_line": 98,
    "code": "@SuppressWarnings(\"JavaUtilDate\")\r\npublic final class UtcDateTypeAdapterTest {\r\n\r\n    private final Gson gson = new GsonBuilder().registerTypeAdapter(Date.class, new UtcDateTypeAdapter()).create();\r\n\r\n    @Test\r\n    public void testLocalTimeZone() {\r\n        Date expected = new Date();\r\n        String json = gson.toJson(expected);\r\n        Date actual = gson.fromJson(json, Date.class);\r\n        assertThat(actual.getTime()).isEqualTo(expected.getTime());\r\n    }\r\n\r\n    @Test\r\n    public void testDifferentTimeZones() {\r\n        for (String timeZone : TimeZone.getAvailableIDs()) {\r\n            Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(timeZone));\r\n            Date expected = cal.getTime();\r\n            String json = gson.toJson(expected);\r\n            // System.out.println(json + \": \" + timeZone);\r\n            Date actual = gson.fromJson(json, Date.class);\r\n            assertThat(actual.getTime()).isEqualTo(expected.getTime());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * JDK 1.7 introduced support for XXX format to indicate UTC date. But Android is older JDK. We\r\n     * want to make sure that this date is parseable in Android.\r\n     */\r\n    @Test\r\n    public void testUtcDatesOnJdkBefore1_7() {\r\n        Gson gson = new GsonBuilder().registerTypeAdapter(Date.class, new UtcDateTypeAdapter()).create();\r\n        Date date = gson.fromJson(\"'2014-12-05T04:00:00.000Z'\", Date.class);\r\n        assertThat(date.getTime()).isEqualTo(1417752000000L);\r\n    }\r\n\r\n    @Test\r\n    public void testUtcWithJdk7Default() {\r\n        Date expected = new Date();\r\n        SimpleDateFormat iso8601Format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", Locale.US);\r\n        iso8601Format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\r\n        String expectedJson = \"\\\"\" + iso8601Format.format(expected) + \"\\\"\";\r\n        String actualJson = gson.toJson(expected);\r\n        assertThat(actualJson).isEqualTo(expectedJson);\r\n        Date actual = gson.fromJson(expectedJson, Date.class);\r\n        assertThat(actual.getTime()).isEqualTo(expected.getTime());\r\n    }\r\n\r\n    @Test\r\n    public void testNullDateSerialization() {\r\n        String json = gson.toJson(null, Date.class);\r\n        assertThat(json).isEqualTo(\"null\");\r\n    }\r\n\r\n    @Test\r\n    public void testWellFormedParseException() {\r\n        var e = assertThrows(JsonParseException.class, () -> gson.fromJson(\"2017-06-20T14:32:30\", Date.class));\r\n        assertThat(e).hasMessageThat().isEqualTo(\"java.text.ParseException: Failed to parse date ['2017-06-20T14']: 2017-06-20T14\");\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "field",
    "name": "gson",
    "start_line": 34,
    "end_line": 35,
    "code": "private final Gson gson = new GsonBuilder().registerTypeAdapter(Date.class, new UtcDateTypeAdapter()).create();",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "method",
    "name": "testLocalTimeZone",
    "start_line": 37,
    "end_line": 43,
    "code": "@Test\r\npublic void testLocalTimeZone() {\r\n    Date expected = new Date();\r\n    String json = gson.toJson(expected);\r\n    Date actual = gson.fromJson(json, Date.class);\r\n    assertThat(actual.getTime()).isEqualTo(expected.getTime());\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "method",
    "name": "testDifferentTimeZones",
    "start_line": 45,
    "end_line": 55,
    "code": "@Test\r\npublic void testDifferentTimeZones() {\r\n    for (String timeZone : TimeZone.getAvailableIDs()) {\r\n        Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(timeZone));\r\n        Date expected = cal.getTime();\r\n        String json = gson.toJson(expected);\r\n        // System.out.println(json + \": \" + timeZone);\r\n        Date actual = gson.fromJson(json, Date.class);\r\n        assertThat(actual.getTime()).isEqualTo(expected.getTime());\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "method",
    "name": "testUtcDatesOnJdkBefore1_7",
    "start_line": 61,
    "end_line": 67,
    "code": "/**\r\n * JDK 1.7 introduced support for XXX format to indicate UTC date. But Android is older JDK. We\r\n * want to make sure that this date is parseable in Android.\r\n */\r\n@Test\r\npublic void testUtcDatesOnJdkBefore1_7() {\r\n    Gson gson = new GsonBuilder().registerTypeAdapter(Date.class, new UtcDateTypeAdapter()).create();\r\n    Date date = gson.fromJson(\"'2014-12-05T04:00:00.000Z'\", Date.class);\r\n    assertThat(date.getTime()).isEqualTo(1417752000000L);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "method",
    "name": "testUtcWithJdk7Default",
    "start_line": 69,
    "end_line": 80,
    "code": "@Test\r\npublic void testUtcWithJdk7Default() {\r\n    Date expected = new Date();\r\n    SimpleDateFormat iso8601Format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", Locale.US);\r\n    iso8601Format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\r\n    String expectedJson = \"\\\"\" + iso8601Format.format(expected) + \"\\\"\";\r\n    String actualJson = gson.toJson(expected);\r\n    assertThat(actualJson).isEqualTo(expectedJson);\r\n    Date actual = gson.fromJson(expectedJson, Date.class);\r\n    assertThat(actual.getTime()).isEqualTo(expected.getTime());\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "method",
    "name": "testNullDateSerialization",
    "start_line": 82,
    "end_line": 86,
    "code": "@Test\r\npublic void testNullDateSerialization() {\r\n    String json = gson.toJson(null, Date.class);\r\n    assertThat(json).isEqualTo(\"null\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  },
  {
    "type": "method",
    "name": "testWellFormedParseException",
    "start_line": 88,
    "end_line": 97,
    "code": "@Test\r\npublic void testWellFormedParseException() {\r\n    var e = assertThrows(JsonParseException.class, () -> gson.fromJson(\"2017-06-20T14:32:30\", Date.class));\r\n    assertThat(e).hasMessageThat().isEqualTo(\"java.text.ParseException: Failed to parse date ['2017-06-20T14']: 2017-06-20T14\");\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\test\\java\\com\\google\\gson\\typeadapters\\UtcDateTypeAdapterTest.java"
  }
]