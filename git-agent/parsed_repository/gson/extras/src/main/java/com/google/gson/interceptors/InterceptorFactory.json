[
  {
    "type": "package",
    "name": "com.google.gson.interceptors",
    "start_line": 17,
    "end_line": 17,
    "code": "package com.google.gson.interceptors;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\interceptors\\InterceptorFactory.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.Gson",
    "start_line": 19,
    "end_line": 19,
    "code": "import com.google.gson.Gson;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\interceptors\\InterceptorFactory.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.TypeAdapter",
    "start_line": 20,
    "end_line": 20,
    "code": "import com.google.gson.TypeAdapter;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\interceptors\\InterceptorFactory.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.TypeAdapterFactory",
    "start_line": 21,
    "end_line": 21,
    "code": "import com.google.gson.TypeAdapterFactory;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\interceptors\\InterceptorFactory.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.reflect.TypeToken",
    "start_line": 22,
    "end_line": 22,
    "code": "import com.google.gson.reflect.TypeToken;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\interceptors\\InterceptorFactory.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.stream.JsonReader",
    "start_line": 23,
    "end_line": 23,
    "code": "import com.google.gson.stream.JsonReader;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\interceptors\\InterceptorFactory.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.stream.JsonWriter",
    "start_line": 24,
    "end_line": 24,
    "code": "import com.google.gson.stream.JsonWriter;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\interceptors\\InterceptorFactory.java"
  },
  {
    "type": "import",
    "name": "java.io.IOException",
    "start_line": 25,
    "end_line": 25,
    "code": "import java.io.IOException;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\interceptors\\InterceptorFactory.java"
  },
  {
    "type": "class",
    "name": "InterceptorFactory",
    "start_line": 28,
    "end_line": 66,
    "code": "/**\r\n * A type adapter factory that implements {@code @Intercept}.\r\n */\r\npublic final class InterceptorFactory implements TypeAdapterFactory {\r\n\r\n    @Override\r\n    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {\r\n        Intercept intercept = type.getRawType().getAnnotation(Intercept.class);\r\n        if (intercept == null) {\r\n            return null;\r\n        }\r\n        TypeAdapter<T> delegate = gson.getDelegateAdapter(this, type);\r\n        return new InterceptorAdapter<>(delegate, intercept);\r\n    }\r\n\r\n    static class InterceptorAdapter<T> extends TypeAdapter<T> {\r\n\r\n        private final TypeAdapter<T> delegate;\r\n\r\n        private final JsonPostDeserializer<T> postDeserializer;\r\n\r\n        // ?\r\n        @SuppressWarnings(\"unchecked\")\r\n        public InterceptorAdapter(TypeAdapter<T> delegate, Intercept intercept) {\r\n            try {\r\n                this.delegate = delegate;\r\n                this.postDeserializer = intercept.postDeserialize().getDeclaredConstructor().newInstance();\r\n            } catch (Exception e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public void write(JsonWriter out, T value) throws IOException {\r\n            delegate.write(out, value);\r\n        }\r\n\r\n        @Override\r\n        public T read(JsonReader in) throws IOException {\r\n            T result = delegate.read(in);\r\n            postDeserializer.postDeserialize(result);\r\n            return result;\r\n        }\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\interceptors\\InterceptorFactory.java"
  },
  {
    "type": "method",
    "name": "create",
    "start_line": 29,
    "end_line": 38,
    "code": "@Override\r\npublic <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {\r\n    Intercept intercept = type.getRawType().getAnnotation(Intercept.class);\r\n    if (intercept == null) {\r\n        return null;\r\n    }\r\n    TypeAdapter<T> delegate = gson.getDelegateAdapter(this, type);\r\n    return new InterceptorAdapter<>(delegate, intercept);\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\interceptors\\InterceptorFactory.java"
  }
]