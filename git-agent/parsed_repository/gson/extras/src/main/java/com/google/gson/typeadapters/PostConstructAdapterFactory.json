[
  {
    "type": "package",
    "name": "com.google.gson.typeadapters",
    "start_line": 17,
    "end_line": 17,
    "code": "package com.google.gson.typeadapters;\r\n\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\typeadapters\\PostConstructAdapterFactory.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.Gson",
    "start_line": 19,
    "end_line": 19,
    "code": "import com.google.gson.Gson;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\typeadapters\\PostConstructAdapterFactory.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.TypeAdapter",
    "start_line": 20,
    "end_line": 20,
    "code": "import com.google.gson.TypeAdapter;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\typeadapters\\PostConstructAdapterFactory.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.TypeAdapterFactory",
    "start_line": 21,
    "end_line": 21,
    "code": "import com.google.gson.TypeAdapterFactory;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\typeadapters\\PostConstructAdapterFactory.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.reflect.TypeToken",
    "start_line": 22,
    "end_line": 22,
    "code": "import com.google.gson.reflect.TypeToken;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\typeadapters\\PostConstructAdapterFactory.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.stream.JsonReader",
    "start_line": 23,
    "end_line": 23,
    "code": "import com.google.gson.stream.JsonReader;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\typeadapters\\PostConstructAdapterFactory.java"
  },
  {
    "type": "import",
    "name": "com.google.gson.stream.JsonWriter",
    "start_line": 24,
    "end_line": 24,
    "code": "import com.google.gson.stream.JsonWriter;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\typeadapters\\PostConstructAdapterFactory.java"
  },
  {
    "type": "import",
    "name": "java.io.IOException",
    "start_line": 25,
    "end_line": 25,
    "code": "import java.io.IOException;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\typeadapters\\PostConstructAdapterFactory.java"
  },
  {
    "type": "import",
    "name": "java.lang.reflect.InvocationTargetException",
    "start_line": 26,
    "end_line": 26,
    "code": "import java.lang.reflect.InvocationTargetException;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\typeadapters\\PostConstructAdapterFactory.java"
  },
  {
    "type": "import",
    "name": "java.lang.reflect.Method",
    "start_line": 27,
    "end_line": 27,
    "code": "import java.lang.reflect.Method;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\typeadapters\\PostConstructAdapterFactory.java"
  },
  {
    "type": "import",
    "name": "javax.annotation.PostConstruct",
    "start_line": 28,
    "end_line": 28,
    "code": "import javax.annotation.PostConstruct;\r\n",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\typeadapters\\PostConstructAdapterFactory.java"
  },
  {
    "type": "class",
    "name": "PostConstructAdapterFactory",
    "start_line": 30,
    "end_line": 80,
    "code": "public class PostConstructAdapterFactory implements TypeAdapterFactory {\r\n\r\n    // copied from https://gist.github.com/swankjesse/20df26adaf639ed7fd160f145a0b661a\r\n    @Override\r\n    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {\r\n        for (Class<?> t = type.getRawType(); (t != Object.class) && (t.getSuperclass() != null); t = t.getSuperclass()) {\r\n            for (Method m : t.getDeclaredMethods()) {\r\n                if (m.isAnnotationPresent(PostConstruct.class)) {\r\n                    m.setAccessible(true);\r\n                    TypeAdapter<T> delegate = gson.getDelegateAdapter(this, type);\r\n                    return new PostConstructAdapter<>(delegate, m);\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static final class PostConstructAdapter<T> extends TypeAdapter<T> {\r\n\r\n        private final TypeAdapter<T> delegate;\r\n\r\n        private final Method method;\r\n\r\n        public PostConstructAdapter(TypeAdapter<T> delegate, Method method) {\r\n            this.delegate = delegate;\r\n            this.method = method;\r\n        }\r\n\r\n        @Override\r\n        public T read(JsonReader in) throws IOException {\r\n            T result = delegate.read(in);\r\n            if (result != null) {\r\n                try {\r\n                    method.invoke(result);\r\n                } catch (IllegalAccessException e) {\r\n                    throw new AssertionError(e);\r\n                } catch (InvocationTargetException e) {\r\n                    if (e.getCause() instanceof RuntimeException) {\r\n                        throw (RuntimeException) e.getCause();\r\n                    }\r\n                    throw new RuntimeException(e.getCause());\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n        @Override\r\n        public void write(JsonWriter out, T value) throws IOException {\r\n            delegate.write(out, value);\r\n        }\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\typeadapters\\PostConstructAdapterFactory.java"
  },
  {
    "type": "method",
    "name": "create",
    "start_line": 32,
    "end_line": 46,
    "code": "// copied from https://gist.github.com/swankjesse/20df26adaf639ed7fd160f145a0b661a\r\n@Override\r\npublic <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {\r\n    for (Class<?> t = type.getRawType(); (t != Object.class) && (t.getSuperclass() != null); t = t.getSuperclass()) {\r\n        for (Method m : t.getDeclaredMethods()) {\r\n            if (m.isAnnotationPresent(PostConstruct.class)) {\r\n                m.setAccessible(true);\r\n                TypeAdapter<T> delegate = gson.getDelegateAdapter(this, type);\r\n                return new PostConstructAdapter<>(delegate, m);\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\git-agent\\repository\\gson\\extras\\src\\main\\java\\com\\google\\gson\\typeadapters\\PostConstructAdapterFactory.java"
  }
]