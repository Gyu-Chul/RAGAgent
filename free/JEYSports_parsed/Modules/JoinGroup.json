[
  {
    "type": "script",
    "name": "",
    "start_line": 3,
    "end_line": 3,
    "code": "const connection = require('../DatabaseLoad');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\JoinGroup.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 6,
    "end_line": 42,
    "code": "module.exports = {\r\n    JoinGroup : async(userToken,data) => {\r\n\r\n        const functionType = data[\"functionType\"]\r\n\r\n        if (functionType == 1){ //조직 ID 검색 \r\n            const groupID = data[\"groupID\"];\r\n\r\n            const result = await SearchGroupID(groupID);\r\n            return result;\r\n\r\n        }else if (functionType == 2){ // 조직 PW 확인\r\n            const groupID = data[\"groupID\"];\r\n            const groupPW = data[\"groupPW\"];\r\n\r\n            const groupToken = await CheckGroupPW(groupID,groupPW);\r\n            console.log(groupID,groupPW,groupToken);\r\n            if (groupToken != 0){// 조직 참가 성공\r\n\r\n                const result = await requestJoin(groupToken,userToken);\r\n                return result;\r\n\r\n            }else{ //조직 참가 실패\r\n                return {result : 0 , resources : null};\r\n            }\r\n\r\n        }else if (functionType == 3){ // 유저가 조직의 초대권 수락\r\n\r\n            const groupToken = data[\"groupToken\"];\r\n            const result = await AcceptInvitation(groupToken,userToken);\r\n            return result;\r\n        }else{\r\n            return {result : 0 , resources : null};\r\n        }\r\n\r\n    }\r\n};",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\JoinGroup.js"
  },
  {
    "type": "function",
    "name": "SearchGroupID",
    "start_line": 47,
    "end_line": 66,
    "code": "async function SearchGroupID(groupID) {\r\n    return new Promise((resolve, reject) => {\r\n        // 조직 있는지 확인\r\n        connection.query('SELECT groupID FROM Organizations WHERE groupID = ?', [groupID], \r\n            (error, results, fields) => {\r\n                if (error) {\r\n                    console.error('쿼리 실행 오류:', error);\r\n                    return reject(error);\r\n                }\r\n\r\n                // 출력된 행의 수 확인\r\n                if (results.length > 0) {\r\n                    resolve({result : 1,resources : null});  // 데이터가 존재함\r\n                } else {\r\n                    resolve({result : 0 , resources : null});  // 데이터가 존재하지 않음\r\n                }\r\n            }\r\n        );\r\n    });\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\JoinGroup.js"
  },
  {
    "type": "function",
    "name": "CheckGroupPW",
    "start_line": 68,
    "end_line": 87,
    "code": "async function CheckGroupPW(groupID,groupPW) {\r\n    return new Promise((resolve, reject) => {\r\n        // 조직 있는지 확인\r\n        connection.query('SELECT groupToken FROM Organizations WHERE groupID = ? and groupPW = ?', [groupID,groupPW], \r\n            (error, results, fields) => {\r\n                if (error) {\r\n                    console.error('쿼리 실행 오류:', error);\r\n                    return reject(error);\r\n                }\r\n\r\n                // 출력된 행의 수 확인\r\n                if (results.length > 0) {\r\n                    resolve(results[0].groupToken);  // 데이터가 존재함. ID,PW 가 맞으므로 그룹토큰 출력\r\n                } else {\r\n                    resolve(0);  // ID,PW 입력 실패\r\n                }\r\n            }\r\n        );\r\n    });\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\JoinGroup.js"
  },
  {
    "type": "function",
    "name": "requestJoin",
    "start_line": 89,
    "end_line": 110,
    "code": "async function requestJoin(groupToken,userToken) {\r\n    return new Promise((resolve, reject) => {\r\n        // 참가 신청\r\n        connection.query(`INSERT INTO UsersOrganizations \r\n            (userToken,groupToken,userPermission)\r\n            VALUES (?,?,4)`, [userToken,groupToken], \r\n            (error, results, fields) => {\r\n                if (error) {\r\n                    console.error('쿼리 실행 오류:', error);\r\n                    return reject(error);\r\n                }\r\n\r\n                // 출력된 행의 수 확인\r\n                if (results.affectedRows > 0) {\r\n                    resolve({result : 1 , resources : null});  // 참가 신청이 완료됨\r\n                } else {\r\n                    resolve({result : 0 , resources : null});  // 참가 신청 실패\r\n                }\r\n            }\r\n        );\r\n    });\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\JoinGroup.js"
  },
  {
    "type": "function",
    "name": "AcceptInvitation",
    "start_line": 112,
    "end_line": 133,
    "code": "async function AcceptInvitation(groupToken,userToken) {\r\n    return new Promise((resolve, reject) => {\r\n        // 초대장 수락\r\n        connection.query(`UPDATE UsersOrganizations \r\n            SET userPermission = 0\r\n            WHERE userToken = ? and groupToken = ?`, [userToken,groupToken], \r\n            (error, results, fields) => {\r\n                if (error) {\r\n                    console.error('쿼리 실행 오류:', error);\r\n                    return reject(error);\r\n                }\r\n\r\n                // 수정된 행의 수 확인\r\n                if (results.affectedRows > 0) {\r\n                    resolve({result : 1 , resources : null});  // 참가완료\r\n                } else {\r\n                    resolve({result : 0 , resources : null});  // 참가실패\r\n                }\r\n            }\r\n        );\r\n    });\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\JoinGroup.js"
  }
]