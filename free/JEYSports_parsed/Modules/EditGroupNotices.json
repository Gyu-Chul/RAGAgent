[
  {
    "type": "script",
    "name": "",
    "start_line": 2,
    "end_line": 2,
    "code": "const connection = require('../DatabaseLoad');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\EditGroupNotices.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 3,
    "end_line": 3,
    "code": "const { CreateDuesList } = require('./CreateDuesList.js');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\EditGroupNotices.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 4,
    "end_line": 4,
    "code": "const { DeleteContent } = require('./DeleteContent.js');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\EditGroupNotices.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 7,
    "end_line": 70,
    "code": "module.exports = {\r\n    EditGroupNotices : async(data) => {\r\n        const functionType = data[\"functionType\"];\r\n        const noticeToken = data[\"noticeToken\"];\r\n\r\n        if (functionType == 1){//공지사항 불러오기\r\n            const result = await LoadNotice(noticeToken);\r\n            return result;\r\n\r\n        }else if (functionType == 2){// 공지사항 삭제\r\n            const userPermission = data[\"userPermission\"]\r\n        \r\n            if (userPermission == 1 || userPermission == 2){\r\n                if (data[\"noticeType\"] == 2){ // 회비 공지사항이라면\r\n                    var result1 = await DeleteContent(noticeToken,2);\r\n                    \r\n                }else{\r\n                    var result1 = 1;\r\n                }\r\n                if (result1 == 1){ //출석 데이터가 정상적으로 삭제됨. or 원래 없었음.\r\n                    const result2 = await DeleteNotice(noticeToken);\r\n                    return {result : result2 , resources : null};\r\n                }\r\n            }\r\n\r\n\r\n        }else if (functionType == 3){//공지사항 수정, 공지사항 저장\r\n            const userPermission = data[\"userPermission\"];\r\n            const noticeType = data[\"noticeType\"];\r\n            if (userPermission == 1 || userPermission == 2){\r\n                \r\n                if (noticeToken == null){ // noticeToken 이 존재하지 않다면, 공지사항을 새로 생성하는 동작임.\r\n\r\n                    if (noticeType == 2){ \r\n\r\n                        const result1 = await CreateNotice(data);\r\n                        const result2 = await CreateDuesList(result1,data[\"groupToken\"]);\r\n\r\n\r\n                        if (result2.result == 0){//회비 데이터를 생성하지 못했다면,\r\n                            const result = await DeleteNotice(result1);\r\n                            return {result : 0 , resources : null};\r\n                        }else{\r\n                            return result2;\r\n                        }\r\n\r\n                    }else{// 회계타입 1,3,4 공지사항 생성\r\n                        const result = await CreateNotice(data);\r\n\r\n                        if (result != 0){\r\n                            return {result : 1 , resources : null};\r\n                        }else{\r\n                            return {result : 0 , resources : null};\r\n                        }\r\n                    }\r\n                    \r\n                }else{\r\n                    const result = await EditNotice(data);\r\n                    return {result : result , resources : null};\r\n                }\r\n            }\r\n        }\r\n    }\r\n};",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\EditGroupNotices.js"
  },
  {
    "type": "function",
    "name": "LoadNotice",
    "start_line": 72,
    "end_line": 93,
    "code": "async function LoadNotice(noticeToken) {\r\n    return new Promise((resolve, reject) => {\r\n        // 공지사항 데이터 전부 불러오기\r\n        connection.query(`SELECT noticeContent,noticeWriter,\r\n                          noticeCreatedDate,noticeEditDate,noticeEndDate FROM Notices \r\n                          WHERE noticeToken = ?`, [noticeToken], \r\n            (error, results, fields) => {\r\n                if (error) {\r\n                    console.error('쿼리 실행 오류:', error);\r\n                    return reject(error);\r\n                }\r\n\r\n                // 출력된 행의 수 확인\r\n                if (results.length > 0) {\r\n                    resolve({result : 1, resources: results});  // 데이터가 정상적으로 출력됨.\r\n                } else {\r\n                    resolve({result : 0 ,resources : null});  //출력된 데이터가 없음\r\n                }\r\n            }\r\n        );\r\n    });\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\EditGroupNotices.js"
  },
  {
    "type": "function",
    "name": "DeleteNotice",
    "start_line": 95,
    "end_line": 115,
    "code": "async function DeleteNotice(noticeToken) {\r\n    return new Promise((resolve, reject) => {\r\n        // 공지사항 삭제하기\r\n        connection.query(`DELETE FROM Notices \r\n                          WHERE noticeToken = ?`, [noticeToken], \r\n            (error, results, fields) => {\r\n                if (error) {\r\n                    console.error('쿼리 실행 오류:', error);\r\n                    return reject(error);\r\n                }\r\n\r\n                // 삭제된 행의 수 확인\r\n                if (results.affectedRows > 0) {\r\n                    resolve(1);  // 데이터가 정상적으로 삭제됨\r\n                } else {\r\n                    resolve(0);  //삭제된 데이터가 없음\r\n                }\r\n            }\r\n        );\r\n    });\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\EditGroupNotices.js"
  },
  {
    "type": "function",
    "name": "CreateNotice",
    "start_line": 117,
    "end_line": 144,
    "code": "async function CreateNotice(data) {\r\n    return new Promise((resolve, reject) => {\r\n        // 공지사항 추가하기\r\n        connection.query(`INSERT INTO Notices \r\n                          (groupToken,noticeTitle,noticeContent,noticeWriter,noticeCreatedDate,\r\n                          noticeEditDate,noticeImportance,noticeStatus,noticeEndDate,noticeType,noticeDues)\r\n                          VALUES(?,?,?,?,?,?,?,?,?,?,?) `, \r\n                          [data[\"groupToken\"],data[\"noticeTitle\"],\r\n                           data[\"noticeContent\"],data[\"noticeWriter\"],\r\n                           data[\"noticeCreatedDate\"],data[\"noticeEditDate\"],\r\n                           data[\"noticeImportance\"],data[\"noticeStatus\"],\r\n                           data[\"noticeEndDate\"],data[\"noticeType\"],data[\"noticeDues\"]], \r\n            (error, results, fields) => {\r\n                if (error) {\r\n                    console.error('쿼리 실행 오류:', error);\r\n                    return reject(error);\r\n                }\r\n\r\n                // 추가된 행의 수 확인\r\n                if (results.affectedRows > 0) {\r\n                    resolve(results.insertId);  // 데이터가 정상적으로 추가됨\r\n                } else {\r\n                    resolve(0);  //추가된 데이터가 없음\r\n                }\r\n            }\r\n        );\r\n    });\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\EditGroupNotices.js"
  },
  {
    "type": "function",
    "name": "EditNotice",
    "start_line": 146,
    "end_line": 173,
    "code": "async function EditNotice(data) {\r\n    return new Promise((resolve, reject) => {\r\n        // 일정 수정하기\r\n        connection.query(`UPDATE Notices\r\n                          SET noticeTitle = ?,noticeContent = ? ,noticeWriter = ? ,\r\n                          noticeEditDate = ? ,noticeImportance = ?,noticeStatus = ? ,noticeEndDate = ?\r\n                          WHERE noticeToken = ? `, \r\n                          [data[\"noticeTitle\"],\r\n                           data[\"noticeContent\"],data[\"noticeWriter\"],\r\n                           data[\"noticeEditDate\"],\r\n                           data[\"noticeImportance\"],data[\"noticeStatus\"],\r\n                           data[\"noticeEndDate\"],data[\"noticeToken\"]], \r\n            (error, results, fields) => {\r\n                if (error) {\r\n                    console.error('쿼리 실행 오류:', error);\r\n                    return reject(error);\r\n                }\r\n\r\n                // 수정된 행의 수 확인\r\n                if (results.affectedRows > 0) {\r\n                    resolve(1);  // 데이터가 정상적으로 수정됨\r\n                } else {\r\n                    resolve(0);  //수정된 데이터가 없음\r\n                }\r\n            }\r\n        );\r\n    });\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\EditGroupNotices.js"
  }
]