[
  {
    "type": "script",
    "name": "",
    "start_line": 2,
    "end_line": 2,
    "code": "const connection = require('../DatabaseLoad');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\CreateGroup.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 3,
    "end_line": 3,
    "code": "const { CheckDuplicate } = require('./CheckDuplicate.js');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\CreateGroup.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 7,
    "end_line": 47,
    "code": "module.exports = {\r\n    CreateGroup : async(userToken,data) => {\r\n        const functionType = data[\"functionType\"];\r\n        const groupID = data[\"groupID\"];\r\n\r\n        //그룹 아이디 중복확인\r\n        if( functionType == 0 ){\r\n            const table = \"Organizations\"\r\n            const data = {groupID : groupID};\r\n            const result = await CheckDuplicate(table,data);\r\n            return result;\r\n\r\n        }else if(functionType == 1){\r\n\r\n            //CheckDuplicate.js 의존 코드\r\n            //ID가 중복되지 않았다면 0 출력\r\n            const table = \"Organizations\"\r\n            const groupID = data[\"groupID\"];\r\n            const data2 = {groupID : groupID};\r\n            const groupIDCheck = await CheckDuplicate(table,data2);\r\n\r\n            if (groupIDCheck == 0){\r\n                const groupName = data[\"groupName\"];\r\n                const groupNumber = data[\"groupNumber\"];\r\n                const groupClassification = data[\"groupClassification\"];\r\n                const groupSportType = data[\"groupSportType\"];\r\n                const groupPW = data[\"groupPW\"];\r\n                const groupImage = data[\"groupImage\"];\r\n                const groupLocation = data[\"groupLoacation\"];\r\n\r\n                const result = await CreateGroupData(userToken,groupID,groupName,groupNumber,\r\n                    groupClassification,groupSportType,groupPW,groupImage,groupLocation\r\n                )\r\n                return result;\r\n            }else{\r\n                return 0;\r\n            }\r\n        }\r\n        \r\n    }\r\n};",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\CreateGroup.js"
  },
  {
    "type": "function",
    "name": "CreateGroupData",
    "start_line": 49,
    "end_line": 90,
    "code": "async function CreateGroupData(userToken, groupID, groupName, groupNumber,\r\n    groupClassification, groupSportType, groupPW, groupImage, groupLocation) {\r\n    \r\n    return new Promise((resolve, reject) => {\r\n\r\n        // 첫 번째 쿼리: 조직 생성\r\n        connection.query(`INSERT INTO Organizations (userToken, groupID, groupName,\r\n            groupNumber, groupClassification, groupSportType,\r\n            groupPW, groupImage, groupLocation) \r\n                          VALUES(?,?,?,?,?,?,?,?,?)`, \r\n                        [userToken, groupID, groupName,\r\n                            groupNumber, groupClassification, groupSportType,\r\n                            groupPW, groupImage, groupLocation],\r\n            (error, results) => {\r\n                if (error) {\r\n                    console.error('조직 생성 오류:', error);\r\n                    return reject(error);\r\n                }\r\n\r\n                // 조직이 성공적으로 생성되었으면 groupToken 가져오기\r\n                if (results.affectedRows > 0) {\r\n                    const groupToken = results.insertId; // 마지막으로 삽입된 ID\r\n\r\n                    // 두 번째 쿼리: UsersOrganizations 테이블에 데이터 추가\r\n                    connection.query(`INSERT INTO UsersOrganizations (userToken, groupToken, userPermission) \r\n                                      VALUES (?, ?, ?)`, \r\n                                      [userToken, groupToken, 2], (error) => {\r\n                        if (error) {\r\n                            console.error('UsersOrganizations 데이터 추가 오류:', error);\r\n                            return reject(error);\r\n                        }\r\n\r\n                        // 모든 작업이 성공적으로 완료되면 결과 반환\r\n                        resolve({groupToken : groupToken});\r\n                    });\r\n                } else {\r\n                    resolve(0);\r\n                }\r\n            }\r\n        );\r\n    });\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\Modules\\CreateGroup.js"
  }
]