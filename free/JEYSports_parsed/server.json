[
  {
    "type": "script",
    "name": "",
    "start_line": 4,
    "end_line": 4,
    "code": "const https = require('https');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 5,
    "end_line": 5,
    "code": "const http = require('http');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 6,
    "end_line": 6,
    "code": "const express = require('express');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 7,
    "end_line": 7,
    "code": "const session = require('express-session')",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 8,
    "end_line": 8,
    "code": "const path = require('path');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 9,
    "end_line": 9,
    "code": "const fs = require('fs');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 10,
    "end_line": 10,
    "code": "const WebSocket = require('ws');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 11,
    "end_line": 11,
    "code": "const bodyParser = require('body-parser');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 12,
    "end_line": 12,
    "code": "const multer = require('multer');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 13,
    "end_line": 13,
    "code": "const DeleteGroup = require('./Modules/DeleteGroup');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 15,
    "end_line": 15,
    "code": "console.log(\"Node.js 모듈 불러오기 성공\")",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 25,
    "end_line": 25,
    "code": "const ModulesDiretory = path.join(__dirname,'Modules');",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 26,
    "end_line": 26,
    "code": "const Modules = {};",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 28,
    "end_line": 36,
    "code": "fs.readdirSync(ModulesDiretory).forEach(file => {\r\n    const filePath = path.join(ModulesDiretory, file);\r\n\r\n    // 파일이 자바스크립트 파일인지 확인\r\n    if (path.extname(filePath) === '.js') {\r\n        const ModuleName = path.basename(file, '.js'); // 확장자를 제거한 파일 이름\r\n        Modules[ModuleName] = require(filePath); \r\n    }\r\n});",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 38,
    "end_line": 38,
    "code": "console.log(\"JEYSport 모듈 불러오기 성공\")",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 49,
    "end_line": 49,
    "code": "const app = express();",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 50,
    "end_line": 50,
    "code": "app.use(express.urlencoded({ extended: true }));",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 51,
    "end_line": 51,
    "code": "app.use(bodyParser.json());",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 52,
    "end_line": 52,
    "code": "app.use(express.static(path.join(__dirname, 'Pages')));",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 53,
    "end_line": 53,
    "code": "app.use(express.static(path.join(__dirname, 'Images')));",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 55,
    "end_line": 60,
    "code": "app.use(session({\r\n    secret: '164365',\r\n    resave: false,\r\n    saveUninitialized: true,\r\n    cookie: { secure: true, maxAge: 20 * 60 * 1000 } // HTTPS를 사용할 경우 true로 설정\r\n}));",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 63,
    "end_line": 66,
    "code": "app.use((err, req, res, next) => {\r\n    console.error(err.stack); \r\n    res.status(500).send({result : 99, message : '서버 오류 발생'});\r\n});",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 69,
    "end_line": 77,
    "code": "const options = {\r\n    //자기서명한 SSL 인증키를 통한 서버 생성\r\n    key: fs.readFileSync(path.join(__dirname, `SecurityKeys/key.pem`)),\r\n    cert: fs.readFileSync(path.join(__dirname, `SecurityKeys/cert.pem`))\r\n\r\n    //메인서버 운영용 SSL 인증키\r\n    //key: fs.readFileSync(`/etc/letsencrypt/live/jeysport.codns.com/privkey.pem`),\r\n    //cert: fs.readFileSync(`/etc/letsencrypt/live/jeysport.codns.com/fullchain.pem`)\r\n};",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 79,
    "end_line": 79,
    "code": "const server = https.createServer(options,app);",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 80,
    "end_line": 83,
    "code": "const httpServer = http.createServer((req,res) => {\r\n    res.writeHead(301,{\"Location\" : `https://${req.headers.host}${req.url}`});\r\n    res.end();\r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 84,
    "end_line": 84,
    "code": "console.log(\"HTTPS , HTTP 서버 구축 성공\")",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "function",
    "name": "checkToken",
    "start_line": 88,
    "end_line": 102,
    "code": "async function checkToken(userToken,req){\r\n\r\n    if ( userToken == req.sessionID ) {\r\n\r\n        // 세션토큰 만료기간 초기화\r\n        req.session._lastAccess = Date.now();\r\n        req.session.cookie.maxAge = 20 * 60 * 1000;\r\n\r\n        //검증 후 리소스 접근권한을 위한 유저토큰 사용\r\n        userToken = req.session.userToken;\r\n        return userToken\r\n    }else{\r\n        return 0\r\n    }\r\n}",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 108,
    "end_line": 111,
    "code": "app.get('/', (req, res) => {\r\n    res.sendFile(path.join(__dirname, 'Pages', 'MainPage.html'));\r\n    \r\n});",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 114,
    "end_line": 114,
    "code": "const PORT = process.env.PORT || 443;",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 115,
    "end_line": 115,
    "code": "server.listen(PORT, () => console.log(`\\n서버 작동 성공 , 현재 포트 : ${PORT} 에서 작동중입니다.`));",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 116,
    "end_line": 116,
    "code": "httpServer.listen(80,() => console.log(`서버 작동 성공 , 현재 포트 : ${80} 에서 작동중입니다.`));",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 117,
    "end_line": 117,
    "code": "const wss = new WebSocket.Server({ server });",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 127,
    "end_line": 149,
    "code": "app.post('/Login' , async (req,res,next) => {\r\n    console.log(\"Login sign\");\r\n    try {\r\n        const {userID , userPW} = req.body;\r\n        const result = await Modules[\"Login\"].Login(userID,userPW);\r\n\r\n        //result 값에 userToken 값이 들어감, ID,PW 검증 실패시 0이 첨부됨.\r\n        if (result != 0){\r\n            req.session.userToken = result[0][\"userToken\"];\r\n            const resources = {userToken : req.sessionID , userImage : result[0][\"userImage\"]}\r\n            res.status(200).send({result : 1, resources : resources});\r\n            \r\n        }else{\r\n            res.status(200).send({result : 0});\r\n            \r\n        }\r\n    }catch(error) {\r\n        next(error);\r\n    }\r\n\r\n\r\n\r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 152,
    "end_line": 165,
    "code": "app.post('/Register' , async (req,res,next) => {\r\n\r\n    console.log(\"Register sign\");\r\n    try {\r\n        const data = req.body;\r\n        result = await Modules[\"Register\"].Register(data);\r\n        res.status(200).send({result : result});\r\n    }catch(error) {\r\n        next(error);\r\n    }\r\n\r\n\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 168,
    "end_line": 182,
    "code": "app.post('/Logout' , (req,res,next) => {\r\n    console.log(\"Logout sign\");\r\n    try{\r\n        req.session.destroy(err => {\r\n            if (err) {\r\n                return res.status(500).send({ result : 0 });\r\n            }\r\n            res.status(200).send({ result : 1 });\r\n        });\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n    \r\n});",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 185,
    "end_line": 195,
    "code": "app.post('/CheckPhone' , async (req,res,next) => {\r\n    console.log(\"CheckPhone sign\");\r\n    try {\r\n        const data = req.body;\r\n        const result = await Modules[\"CheckPhone\"].CheckPhone(data);\r\n        res.status(200).send({result : result});\r\n    }catch(error) {\r\n        next(error);\r\n    }\r\n\r\n});",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 198,
    "end_line": 227,
    "code": "app.get('/Certification' , async (req,res,next) => {\r\n\r\n    console.log(\"Certification sign\");\r\n    try {\r\n        let query = req.query;\r\n        var userToken = query[\"userToken\"];\r\n        let page = query[\"page\"]; \r\n\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ) {\r\n\r\n            if (page == undefined){\r\n                res.status(200).send({result : 0 , resources : null});\r\n\r\n            }else{\r\n                const result = await Modules[\"Certification\"].Certification(userToken,page,query);\r\n                res.status(200).send(result);\r\n            }\r\n        } else {\r\n            res.status(401).send({result : 0});\r\n        }\r\n    }catch(error) {\r\n        next(error);\r\n    }\r\n        \r\n    \r\n    \r\n    \r\n});",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 231,
    "end_line": 256,
    "code": "app.post('/ImageUpload', Modules[\"ImageUpload\"].upload.single('Image'), async (req, res, next) => {\r\n\r\n    console.log(\"ImageUpload sign\")\r\n\r\n    try {\r\n        const JSONdata = JSON.parse(req.body.json);\r\n        const Imagedata = req.file;\r\n        let userToken = JSONdata[\"userToken\"];\r\n\r\n        userToken = await checkToken(userToken, req);\r\n      \r\n        if (userToken !== 0) {\r\n            if (!Imagedata) {\r\n                return res.status(400).send('파일이 업로드되지 않았습니다.');\r\n                \r\n            }\r\n            // ImageUpload 함수 호출\r\n            const result = await Modules[\"ImageUpload\"].ImageUpload(userToken,req, res);\r\n            return res.status(200).send(result);\r\n        } else {\r\n            return res.status(403).send({ result: 99, message: '인증 실패' });\r\n        }\r\n    } catch (error) {\r\n        next(error);\r\n    }\r\n});",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 259,
    "end_line": 282,
    "code": "app.post('/CreateGroup', async(req,res,next) => {\r\n    \r\n    console.log(\"CreateGroup sign\")\r\n    try {\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ) {\r\n                \r\n            const result = await Modules[\"CreateGroup\"].CreateGroup(userToken,data);\r\n\r\n            if (result == 0){\r\n                res.status(200).send({result : 0, resources : null});\r\n            }else{\r\n                res.status(200).send({result : 1, resources : result});\r\n            }\r\n        }else{\r\n            res.status(500).send({result : 99, message : '서버 오류 발생'});\r\n        }\r\n    }catch(error) {\r\n        next(error);\r\n    }\r\n});",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 285,
    "end_line": 307,
    "code": "app.post('/ChangeNormalData', async(req,res,next) => {\r\n\r\n    console.log(\"ChangeNormalData sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ){\r\n            const result = await Modules[\"ChangeNormalData\"].ChangeNormalData(userToken,data)\r\n            res.status(200).send(result);\r\n\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n\r\n    \r\n\r\n    }catch(error){\r\n        next(error);\r\n    }            \r\n\r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 310,
    "end_line": 329,
    "code": "app.post('/DeleteUser', async(req,res,next) => {\r\n\r\n    console.log(\"DeleteUser sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ){\r\n            const result = await Modules[\"DeleteUser\"].DeleteUser(userToken,data)\r\n            res.status(200).send(result);\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 332,
    "end_line": 351,
    "code": "app.post('/DeleteGroup', async(req,res,next) => {\r\n\r\n    console.log(\"DeleteGroup sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ){\r\n            const groupToken = data[\"groupToken\"];\r\n            const result = await Modules[\"DeleteGroup\"].DeleteGroup(userToken,groupToken);\r\n            res.status(200).send(result);\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 354,
    "end_line": 372,
    "code": "app.post('/EditGroupNotices', async(req,res,next) => {\r\n\r\n    console.log(\"EditGroupNotices sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ){\r\n            const result = await Modules[\"EditGroupNotices\"].EditGroupNotices(data);\r\n            res.status(200).send(result);\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 375,
    "end_line": 393,
    "code": "app.post('/EditGroupSchedules', async(req,res,next) => {\r\n\r\n    console.log(\"EditGroupSchedules sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ){\r\n            const result = await Modules[\"EditGroupSchedules\"].EditGroupSchedules(data);\r\n            res.status(200).send(result);\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 396,
    "end_line": 416,
    "code": "app.post('/EditGroupMembers', async(req,res,next) => {\r\n\r\n    console.log(\"EditGroupMembers sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        var groupToken = data[\"groupToken\"]\r\n        var userPermission = data[\"userPermission\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ){\r\n            const result = await Modules[\"EditGroupMembers\"].EditGroupMembers(userToken,groupToken,userPermission,data);\r\n            res.status(200).send(result);\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 419,
    "end_line": 437,
    "code": "app.post('/JoinGroup', async(req,res,next) => {\r\n\r\n    console.log(\"JoinGroup sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ){\r\n            const result = await Modules[\"JoinGroup\"].JoinGroup(userToken,data);\r\n            res.status(200).send(result);\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 440,
    "end_line": 458,
    "code": "app.post('/RefuseMember', async(req,res,next) => {\r\n\r\n    console.log(\"RefuseMember sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ){\r\n            const result = await Modules[\"RefuseMember\"].RefuseMember(userToken,data);\r\n            res.status(200).send(result);\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 461,
    "end_line": 479,
    "code": "app.post('/LeaveGroup', async(req,res,next) => {\r\n\r\n    console.log(\"LeaveGroup sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ){\r\n            const result = await Modules[\"LeaveGroup\"].LeaveGroup(userToken,data);\r\n            res.status(200).send(result);\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 482,
    "end_line": 500,
    "code": "app.post('/CheckGroupStatus', async(req,res,next) => {\r\n\r\n    console.log(\"CheckGroupStatus sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ){\r\n            const result = await Modules[\"CheckGroupStatus\"].CheckGroupStatus(userToken,data);\r\n            res.status(200).send(result);\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 503,
    "end_line": 521,
    "code": "app.post('/EditAttendanceList', async(req,res,next) => {\r\n\r\n    console.log(\"EditAttendanceList sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ){\r\n            const result = await Modules[\"EditAttendanceList\"].EditAttendanceList(data);\r\n            res.status(200).send(result);\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 524,
    "end_line": 542,
    "code": "app.post('/EditDuesList', async(req,res,next) => {\r\n\r\n    console.log(\"EditDuesList sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ){\r\n            const result = await Modules[\"EditDuesList\"].EditDuesList(data);\r\n            res.status(200).send(result);\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 545,
    "end_line": 563,
    "code": "app.post('/Attend', async(req,res,next) => {\r\n\r\n    console.log(\"Attend sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ){\r\n            const result = await Modules[\"Attend\"].Attend(userToken,data);\r\n            res.status(200).send(result);\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 567,
    "end_line": 585,
    "code": "app.post('/Dues', async(req,res,next) => {\r\n\r\n    console.log(\"Dues sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n        \r\n        if ( userToken != 0 ){\r\n            const result = await Modules[\"Dues\"].Dues(userToken,data);\r\n            res.status(200).send(result);\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 588,
    "end_line": 606,
    "code": "app.post('/ReturnDues', async(req,res,next) => {\r\n\r\n    console.log(\"ReturnDues sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ){\r\n            const result = await Modules[\"ReturnDues\"].ReturnDues(userToken,data);\r\n            res.status(200).send(result);\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 609,
    "end_line": 627,
    "code": "app.post('/SendAlarm', async(req,res,next) => {\r\n\r\n    console.log(\"SendAlarm sign\");\r\n    try{\r\n        const data = req.body;\r\n        var userToken = data[\"userToken\"]\r\n        userToken = await checkToken(userToken,req);\r\n\r\n        if ( userToken != 0 ){\r\n            const result = await Modules[\"SendAlarm\"].SendAlarm(userToken,data);\r\n            res.status(200).send(result);\r\n        }else{\r\n            res.status(200).send({result : 99 , message : \"로그인 바랍니다.\"});\r\n        }\r\n    }catch(error){\r\n        next(error);\r\n    }\r\n    \r\n})",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  },
  {
    "type": "script",
    "name": "",
    "start_line": 630,
    "end_line": 645,
    "code": "wss.on('connection', (ws) => {\r\n    console.log(\"클라이언트가 연결되었습니다.\");\r\n\r\n    ws.on('message', (message) => {\r\n        const textMessage = message.toString();\r\n        console.log(\"받은 메시지:\", textMessage);\r\n        // 메시지를 받은 경우 모든 클라이언트에 전송\r\n        wss.clients.forEach(client => {\r\n            if (client.readyState === WebSocket.OPEN) {\r\n                console.log(\"전송할 메시지:\", textMessage); // 추가된 로그\r\n                client.send(textMessage);\r\n            }\r\n        });\r\n    });\r\n    \r\n});",
    "file_path": "C:\\Users\\su9ki\\Desktop\\git-ai\\free\\JEYSports\\server.js"
  }
]